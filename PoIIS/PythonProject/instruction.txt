cd /d d:\
virtualenv PythonEnvironment
PythonEnvironment\Scripts\activate.bat
pip install django
pip install psycopg2
cd PythonEnvironment
django-admin startproject realestate
python manage.py createsuperuser
python manage.py startapp webapp
add data base into settings.py and models
python manage.py makemigrations
add app into settings.py
-------------------------------------------------------
DATABASE
-------------------------------------------------------
CREATE DATABASE realestate;
CREATE USER sqluser WITH PASSWORD '5353A201';
ALTER ROLE sqluser SET default_transaction_isolation TO 'read committed';
ALTER ROLE sqluser SET timezone TO 'UTC';
GRANT ALL PRIVILEGES ON DATABASE realestate TO sqluser;
GRANT postgres TO sqluser;
CREATE TABLE Області
(
	"Назва області" varchar(200) PRIMARY KEY
);
CREATE TABLE "Населені пункти"
(
        "Область" varchar(200) REFERENCES Області,
	"Назва населеного пункту" varchar(200),
        PRIMARY KEY("Область","Назва населеного пункту")
);
CREATE TABLE Вулиці
(	
        "Область" varchar(200) REFERENCES Області,
        "Населений пункт" varchar(200),        
	FOREIGN KEY("Область","Населений пункт") REFERENCES "Населені пункти"("Область","Назва населеного пункту"),
        "Назва вулиці" varchar(200),
        PRIMARY KEY("Область","Населений пункт","Назва вулиці")
);
CREATE TABLE Будинки
(
	"Область" varchar(200),
	"Населений пункт" varchar(200),
	"Вулиця" varchar(200),
        FOREIGN KEY("Область","Населений пункт","Вулиця") REFERENCES "Вулиці"("Область","Населений пункт","Назва вулиці"),
	"№ будинку" varchar(40),
	"Рік будівництва" int,
	"Матеріали" int,
	"Кількість поверхів" int,
	"Висота стелі" int,
	"Стан" varchar(40)
);
-------------------------------------------------------
D:\PythonEnvironment\realestate\realestate\settings.py:
-------------------------------------------------------
INSTALLED_APPS = [
    'webapp',.....
]
ROOT_URLCONF = 'realestate.urls'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ["webapp"],....
    },
]
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'realestate', 
        'USER': 'sqluser', 
        'PASSWORD': '5353A201',
        'HOST': '127.0.0.1', 
        'PORT': '5432',
    }
}
-------------------------------------------------------
D:\PythonEnvironment\realestate\realestate\urls.py
-------------------------------------------------------
from django.contrib import admin
from django.urls import path
from webapp import views
 
urlpatterns = [
    path('', views.index),
    path('create/', views.create),
]
-------------------------------------------------------
D:\PythonEnvironment\realestate\webapp\models.py
-------------------------------------------------------
from django.db import models
class districts(models.Model):
    districts = models.CharField("Назва області",max_length=40)
-------------------------------------------------------
D:\PythonEnvironment\realestate\webapp\views.py
-------------------------------------------------------
from django.shortcuts import render
from django.http import HttpResponseRedirect
from .models import districts
import psycopg2
from psycopg2 import Error
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT
# получение данных из бд
def index(request):
	connection = psycopg2.connect(user="sqluser",password="5353A201",host="127.0.0.1",port="5432",database="realestate")
	connection.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)
	cursor = connection.cursor()
	sql_create_database = "SELECT * from \"Області\""
	cursor.execute(sql_create_database)	
	districts = cursor.fetchall()
	cursor.close()
	connection.close()
	ChangedDistricts=[]
	for district in districts:
		ChangedDistricts.append(district[0])
	return render(request,"index.html",{"Області": ChangedDistricts})
def create(request):
	if request.method == "POST":
		tom = Області()
		tom.name = request.POST.get("name")
		return HttpResponseRedirect("/")
-------------------------------------------------------
D:\PythonEnvironment\realestate\webapp\index.html
-------------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Модели в Django</title>
</head>
<body class="container">
    <form method="POST" action="create/">
        {% csrf_token %}
        <!--<p>
            <label>Введите имя</label><br>
            <input type="text" name="name" />
        </p>
        <p>
            <label>Введите возраст</label><br>
            <input type="number" name="age" />
        </p>
        <input type="submit" value="Сохранить" >-->
    </form>
    <h3>База даних</h3>
    <table>
        {% for person in Області %}
        <tr><br>{{ person }}</br></tr>
        {% endfor %}
    </table>
</body>
</html>
-------------------------------------------------------
D:\PythonEnvironment\realestate\run server.bat
-------------------------------------------------------
@echo off
set "VIRTUAL_ENV=D:\PythonEnvironment"
if defined _OLD_VIRTUAL_PROMPT (
    set "PROMPT=%_OLD_VIRTUAL_PROMPT%"
) else (
    if not defined PROMPT (
        set "PROMPT=$P$G"
    )
    if not defined VIRTUAL_ENV_DISABLE_PROMPT (
        set "_OLD_VIRTUAL_PROMPT=%PROMPT%"
    )
)
if not defined VIRTUAL_ENV_DISABLE_PROMPT (
    if "" NEQ "" (
        set "PROMPT=() %PROMPT%"
    ) else (
        for %%d in ("%VIRTUAL_ENV%") do set "PROMPT=(%%~nxd) %PROMPT%"
    )
)
REM Don't use () to avoid problems with them in %PATH%
if defined _OLD_VIRTUAL_PYTHONHOME goto ENDIFVHOME
    set "_OLD_VIRTUAL_PYTHONHOME=%PYTHONHOME%"
:ENDIFVHOME
set PYTHONHOME=
REM if defined _OLD_VIRTUAL_PATH (
if not defined _OLD_VIRTUAL_PATH goto ENDIFVPATH1
    set "PATH=%_OLD_VIRTUAL_PATH%"
:ENDIFVPATH1
REM ) else (
if defined _OLD_VIRTUAL_PATH goto ENDIFVPATH2
    set "_OLD_VIRTUAL_PATH=%PATH%"
:ENDIFVPATH2
set "PATH=%VIRTUAL_ENV%\Scripts;%PATH%"
python manage.py runserver
