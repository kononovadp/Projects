Microsoft (R) Macro Assembler Version 5.00                  4/13/15 16:30:03
                                                             Page     1-1


       1				;В этом варианте используется структура
					 программы, которая поддерживает исполь
					зование  
       2				;более одного сегмента кодов и данных. 
					Программа компилирутся корректно, но по
					сле выполнения 
       3				;второй команды в отладчике при вызове 
					команды db,ff возникает ошибка invalid 
					opcode  
       4				;и выполнение дальше не идет. 
       5				Node struc 
       6 0000  0004[			namex db 4 dup (0ffh)  
       7	   FF			
       8			 ]	
       9				
      10 0004  0002[			field1 dw 2 dup (3231h) 
      11	   3231			
      12			 ]	
      13				
      14 0008				Node ENDS 
      15 0000				data segment  
      16 0000				Data1 segment 
      17 0000  ??			I_struc db ? 
      18 0001  0004[			A0 Node <> 
      19	   FF			
      20			 ]	
      21 0005  0002[			
      22	   3231			
      23			 ]	
      24				
      25 0009  0002[			A1 Node 2 dup (<>) 
      26	0004[			
      27	    FF			
      28			]	
      29	0002[			
      30	    3231		
      31			]	
      32			 ]	
      33				
      34 0019  0004[			A2 Node 4 dup (<>) 
      35	0004[			
      36	    FF			
      37			]	
      38	0002[			
      39	    3231		
      40			]	
      41			 ]	
      42				
      43 0039  0008[			A3 Node 8 dup (<>) 
      44	0004[			
      45	    FF			
      46			]	
      47	0002[			
      48	    3231		
Microsoft (R) Macro Assembler Version 5.00                  4/13/15 16:30:03
                                                             Page     1-2


      49			]	
      50			 ]	
      51				
      52 0079				Data1 ends 
      53 0000				data2 segment ;второй сегмент данных ну
					жен только для задания 2 
      54 0000  0004[			B0 Node <> 
      55	   FF			
      56			 ]	
      57 0004  0002[			
      58	   3231			
      59			 ]	
      60				
      61 0008  0002[			B1 Node 2 dup (<>) 
      62	0004[			
      63	    FF			
      64			]	
      65	0002[			
      66	    3231		
      67			]	
      68			 ]	
      69				
      70 0018  0004[			B2 Node 4 dup (<>) 
      71	0004[			
      72	    FF			
      73			]	
      74	0002[			
      75	    3231		
      76			]	
      77			 ]	
      78				
      79 0038  0008[			B3 Node 8 dup (<>) 
      80	0004[			
      81	    FF			
      82			]	
      83	0002[			
      84	    3231		
      85			]	
      86			 ]	
      87				
      88 0078				data2 ends 
      89 0000				data ends 
      90 0000				code segment 
      91 0000				code1 segment  ;выполнение задания 1 
      92					assume ds:data1,cs:code1 ;устан
					овка связи с необходимыми сегментами ко
					дов и данных 
      93					;mov	ax,data1 ;помещаем в ax
					 исходные данные о структурах сегмента 
					Data1 
      94					;mov	ds,ax ;эти данные должн
					ы быть в сегментном регистре ds 
      95					;xor	ax,ax ;обнуление ax  
      96 0000  B9 0002				mov	cx,length A1 ;помещаем 
Microsoft (R) Macro Assembler Version 5.00                  4/13/15 16:30:03
                                                             Page     1-3


					в счетчик размер структуры, из которой 
					будем перемещать элементы 
      97 0003  BE 0000				mov	si,0 ;обнуляем индексны
					й регистр  
      98 0006  BB 0009 R			mov bx, offset A1 ;помещаем адр
					еса смещений элементов структуры в bx 
      99 0009					CA0: 
     100 0009  89 9C 0005 R			mov field1.A0[si],bx ;помещаем 
					в массив целевой структуры необходимую 
					структуру 
3.ASM(34): warning A4057: Illegal size for operand
     101 000D  83 C3 08				add bx,8 ;сдвиг по структуре на
					 следующий элемент 
     102 0010  83 C6 02				add si,2 ;сдвиг индекса 
     103 0013  E2 F4				loop CA0 
     104				;--------------------------------------
					------------------------------------
						 
     105				;помещаем смещение элементов структуры 
					A2 в поле field1 массива структур A1
						 
     106 0015  B9 0004				mov	cx,length A2 ;помещаем 
					в счетчик размер структуры, из которой 
					будем перемещать элементы 
     107 0018  BE 0000				mov	si,0 ;обнуляем индексны
					й регистр  
     108 001B  BB 0019 R			mov bx, offset A2 ;помещаем сме
					щения элементов структуры в bx 
     109 001E					CA1: 
     110 001E  89 9C 000D R			mov field1.A1[si],bx ;помещаем 
					в массив целевой структуры необходимую 
					структуру 
3.ASM(44): warning A4057: Illegal size for operand
     111 0022  83 C3 08				add bx,8 ;сдвига по структуре н
					а следующий элемент 
     112 0025  83 F9 03				cmp cx,3 ;когда счетчик на трет
					ьем элементе, нужно сдвинуться на 4 эле
					мента вперед, чтобы попасть в поле fiel
					d1 
     113 0028  74 02				je @1 ;если cx = 3, то выполняе
					тся сдвиг на 4 элемента, чтобы попасть 
					в поле field1 
     114 002A  75 03				jne @2 ; в остальных случаях ин
					декс сдвигается на 2 
     115 002C  83 C6 04				@1: add si,4 ;сдвиг индекса на 
					4 
     116 002F  83 C6 02				@2: add si,2 ;сдвиг индекса на 
					2 
     117 0032  E2 EA				loop CA1 
     118				;--------------------------------------
					------------------------------------
						 
     119				;помещаем смещение элементов структуры 
					A3 в поле field1 массива структур A2 
Microsoft (R) Macro Assembler Version 5.00                  4/13/15 16:30:03
                                                             Page     1-4


     120				;(получилось не совсем красиво, возможн
					о есть более грамотный вариант с меньши
					м количеством команд!) 
     121 0034  B9 0004				mov	cx,4 ;в одном цикле обр
					абатываем половину элементов структуры 
     122 0037  BE 0000				mov	si,0 ;обнуляем индексны
					й регистр  
     123 003A  BB 0039 R			mov bx, offset A3 ;помещаем сме
					щение элементов структуры в bx 
     124 003D					CA2: 
     125 003D  89 9C 001D R			mov field1.A2[si],bx ;помещаем 
					в массив целевой структуры необходимую 
					структуру 
3.ASM(59): warning A4057: Illegal size for operand
     126 0041  83 C3 08				add bx,8 ;сдвигаемсџ по структу
					ре на следующий элемент 
     127 0044  83 F9 03				cmp cx,3 ;когда счетчик на трет
					ьем элементе, нужно сдвинуться на 4 эле
					мента вперед, чтобы попасть в поле fiel
					d1 
     128 0047  74 02				je @3 ;если cx = 3, то выполняе
					тся сдвиг на 4 элемента, чтобы попасть 
					в поле field1 
     129 0049  75 03				jne @4 ; в остальных случаях ин
					декс сдвигается на 2 
     130 004B  83 C6 04				@3: add si,4 ;сдвиг индекса на 
					4 
     131 004E  83 C6 02				@4: add si,2 ;сдвиг индекса на 
					2 
     132 0051  E2 EA				loop CA2 
     133 0053  83 C6 04				add si,4 ;переход на 4 элемента
					, чтобы попасть в поле field1 
     134 0056  B9 0004				mov cx,4 ;во втором цикле обраб
					атывается 4 остальных элемента 
     135 0059					CA2_1: 
     136 0059  89 9C 001D R			mov field1.A2[si],bx ;помещаем 
					в массив целевой структуры необходимую 
					структуру 
3.ASM(70): warning A4057: Illegal size for operand
     137 005D  83 C3 08				add bx,8 ;сдвигаемсџ по структу
					ре на следующий элемент 
     138 0060  83 F9 03				cmp cx,3 ;когда счетчик на трет
					ьем элементе, нужно сдвинуться на 4 эле
					мента вперед, чтобы попасть в поле fiel
					d1 
     139 0063  74 02				je @5 ;если cx = 3, то выполняе
					тся сдвиг на 4 элемента, чтобы попасть 
					в поле field1 
     140 0065  75 03				jne @6 ; в остальных случаях ин
					декс сдвигается на 2 
     141 0067  83 C6 04				@5: add si,4 ;сдвиг индекса на 
					4 
     142 006A  83 C6 02				@6: add si,2 ;сдвиг индекса на 
					2 
Microsoft (R) Macro Assembler Version 5.00                  4/13/15 16:30:03
                                                             Page     1-5


     143 006D  E2 EA				loop CA2_1 
     144 006F					exit: ;завершение программы, та
					к как запуск следующих сегментов кодов 
					и данных не поддерживается выбранной мн
					ой структурой программ
     145 006F  B8 4C00				mov ax, 4c00h 
     146 0072  CD 21				int 21h 
     147 0074				code1 ends ;конец первого сегмента кодо
					в 
     148				;===========================вторая част
					ь работы;=========================== 
     149 0000				code2 segment ;выполнение задания 2 
     150					assume ds:data1,es:data2,cs:cod
					e2 ;регистр источника - ds, регистр при
					емника - es 
     151 0000  B8 ---- R			mov ax,data1 ;инициализация пер
					вого сегмента данных, который нужно ско
					пировать во второй сегмент 
     152 0003  8E D8				mov ds,ax 
     153 0005  B8 ---- R			mov ax,data2 ;инициализация вто
					рого сегмента данных, в который нужно к
					опировать первый сегмент 
     154 0008  8E C0				mov es,ax 
     155 000A  FC				cld ;сброс флага df 
     156 000B  8D 36 0001 R			lea si,A0 ;получение адреса сме
					щения структуры A0, которую необходимо 
					копировать 
     157 000F  8D 3E 0000 R			lea di,B0 ;получение адреса сме
					щения структуры B0, в которую нужно ско
					пировать структуру А0 
     158 0013  B9 0001				mov	cx,length A0 ;помещаем 
					в счетчик количество полей структуры, к
					оторые нужно переслать во вторую структ
					уру 
     159 0016  F3/ A5				rep movs B0, A0 ;выполняется пе
					ресылка структуры А0 в структуру B0 
3.ASM(93): warning A4057: Illegal size for operand
     160 0018  8D 16 0000 R			lea dx,B0 ;в dx помещается смещ
					ение структуры B0 
     161					;завершение работы программы 
     162 001C  B8 4C00				mov ax,4c00h 
     163 001F  CD 21				int 21h 
     164 0021				code2 ends ;конец второго сегмента кодо
					в 
     165 0000				code ends 
     166				end 
Microsoft (R) Macro Assembler Version 5.00                  4/13/15 16:30:03
                                                             Symbols-1


Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

NODE . . . . . . . . . . . . . .  	0008	0002
  NAMEX  . . . . . . . . . . . .  	0000
  FIELD1 . . . . . . . . . . . .  	0004

Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	0000	PARA	NONE	
CODE1  . . . . . . . . . . . . .  	0074	PARA	NONE	
CODE2  . . . . . . . . . . . . .  	0021	PARA	NONE	
DATA . . . . . . . . . . . . . .  	0000	PARA	NONE	
DATA1  . . . . . . . . . . . . .  	0079	PARA	NONE	
DATA2  . . . . . . . . . . . . .  	0078	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

A0 . . . . . . . . . . . . . . .  	L QWORD	0001	DATA1
A1 . . . . . . . . . . . . . . .  	L QWORD	0009	DATA1	Length = 0002
A2 . . . . . . . . . . . . . . .  	L QWORD	0019	DATA1	Length = 0004
A3 . . . . . . . . . . . . . . .  	L QWORD	0039	DATA1	Length = 0008

B0 . . . . . . . . . . . . . . .  	L QWORD	0000	DATA2
B1 . . . . . . . . . . . . . . .  	L QWORD	0008	DATA2	Length = 0002
B2 . . . . . . . . . . . . . . .  	L QWORD	0018	DATA2	Length = 0004
B3 . . . . . . . . . . . . . . .  	L QWORD	0038	DATA2	Length = 0008

CA0  . . . . . . . . . . . . . .  	L NEAR	0009	CODE1
CA1  . . . . . . . . . . . . . .  	L NEAR	001E	CODE1
CA2  . . . . . . . . . . . . . .  	L NEAR	003D	CODE1
CA2_1  . . . . . . . . . . . . .  	L NEAR	0059	CODE1

EXIT . . . . . . . . . . . . . .  	L NEAR	006F	CODE1

I_STRUC  . . . . . . . . . . . .  	L BYTE	0000	DATA1

@1 . . . . . . . . . . . . . . .  	L NEAR	002C	CODE1
@2 . . . . . . . . . . . . . . .  	L NEAR	002F	CODE1
@3 . . . . . . . . . . . . . . .  	L NEAR	004B	CODE1
@4 . . . . . . . . . . . . . . .  	L NEAR	004E	CODE1
@5 . . . . . . . . . . . . . . .  	L NEAR	0067	CODE1
@6 . . . . . . . . . . . . . . .  	L NEAR	006A	CODE1
@FILENAME  . . . . . . . . . . .  	TEXT  3		

Microsoft (R) Macro Assembler Version 5.00                  4/13/15 16:30:03
                                                             Symbols-2



    100 Source  Lines
    100 Total   Lines
     31 Symbols

  48588 + 418724 Bytes symbol space free

      5 Warning Errors
      0 Severe  Errors
