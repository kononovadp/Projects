;В этом варианте используется структура программы, которая поддерживает использование 
;более одного сегмента кодов и данных. Программа компилирутся корректно, но после выполнения
;второй команды в отладчике при вызове команды db,ff возникает ошибка invalid opcode 
;и выполнение дальше не идет.
Node struc
namex db 4 dup (0ffh) 
field1 dw 2 dup (3231h)
Node ENDS
data segment 
Data1 segment
I_struc db ?
A0 Node <>
A1 Node 2 dup (<>)
A2 Node 4 dup (<>)
A3 Node 8 dup (<>)
Data1 ends
data2 segment ;второй сегмент данных нужен только для задания 2
B0 Node <>
B1 Node 2 dup (<>)
B2 Node 4 dup (<>)
B3 Node 8 dup (<>)
data2 ends
data ends
code segment
code1 segment  ;выполнение задания 1
	assume ds:data1,cs:code1 ;установка связи с необходимыми сегментами кодов и данных
	;mov	ax,data1 ;помещаем в ax исходные данные о структурах сегмента Data1
	;mov	ds,ax ;эти данные должны быть в сегментном регистре ds
	;xor	ax,ax ;обнуление ax 
	mov	cx,length A1 ;помещаем в счетчик размер структуры, из которой будем перемещать элементы
	mov	si,0 ;обнуляем индексный регистр 
	mov bx, offset A1 ;помещаем адреса смещений элементов структуры в bx
	CA0:
	mov field1.A0[si],bx ;помещаем в массив целевой структуры необходимую структуру
	add bx,8 ;сдвиг по структуре на следующий элемент
	add si,2 ;сдвиг индекса
	loop CA0
;--------------------------------------------------------------------------	
;помещаем смещение элементов структуры A2 в поле field1 массива структур A1	
	mov	cx,length A2 ;помещаем в счетчик размер структуры, из которой будем перемещать элементы
	mov	si,0 ;обнуляем индексный регистр 
	mov bx, offset A2 ;помещаем смещения элементов структуры в bx
	CA1:
	mov field1.A1[si],bx ;помещаем в массив целевой структуры необходимую структуру
	add bx,8 ;сдвига по структуре на следующий элемент
	cmp cx,3 ;когда счетчик на третьем элементе, нужно сдвинуться на 4 элемента вперед, чтобы попасть в поле field1
	je @1 ;если cx = 3, то выполняется сдвиг на 4 элемента, чтобы попасть в поле field1
	jne @2 ; в остальных случаях индекс сдвигается на 2
	@1: add si,4 ;сдвиг индекса на 4
	@2: add si,2 ;сдвиг индекса на 2
	loop CA1
;--------------------------------------------------------------------------	
;помещаем смещение элементов структуры A3 в поле field1 массива структур A2
;(получилось не совсем красиво, возможно есть более грамотный вариант с меньшим количеством команд!)
	mov	cx,4 ;в одном цикле обрабатываем половину элементов структуры
	mov	si,0 ;обнуляем индексный регистр 
	mov bx, offset A3 ;помещаем смещение элементов структуры в bx
	CA2:
	mov field1.A2[si],bx ;помещаем в массив целевой структуры необходимую структуру
	add bx,8 ;сдвигаемсџ по структуре на следующий элемент
	cmp cx,3 ;когда счетчик на третьем элементе, нужно сдвинуться на 4 элемента вперед, чтобы попасть в поле field1
	je @3 ;если cx = 3, то выполняется сдвиг на 4 элемента, чтобы попасть в поле field1
	jne @4 ; в остальных случаях индекс сдвигается на 2
	@3: add si,4 ;сдвиг индекса на 4
	@4: add si,2 ;сдвиг индекса на 2
	loop CA2
	add si,4 ;переход на 4 элемента, чтобы попасть в поле field1
	mov cx,4 ;во втором цикле обрабатывается 4 остальных элемента
	CA2_1:
	mov field1.A2[si],bx ;помещаем в массив целевой структуры необходимую структуру
	add bx,8 ;сдвигаемсџ по структуре на следующий элемент
	cmp cx,3 ;когда счетчик на третьем элементе, нужно сдвинуться на 4 элемента вперед, чтобы попасть в поле field1
	je @5 ;если cx = 3, то выполняется сдвиг на 4 элемента, чтобы попасть в поле field1
	jne @6 ; в остальных случаях индекс сдвигается на 2
	@5: add si,4 ;сдвиг индекса на 4
	@6: add si,2 ;сдвиг индекса на 2
	loop CA2_1
	exit: ;завершение программы, так как запуск следующих сегментов кодов и данных не поддерживается выбранной мной структурой программы
	mov ax, 4c00h
	int 21h
code1 ends ;конец первого сегмента кодов
;===========================вторая часть работы;===========================
code2 segment ;выполнение задания 2
	assume ds:data1,es:data2,cs:code2 ;регистр источника - ds, регистр приемника - es
	mov ax,data1 ;инициализация первого сегмента данных, который нужно скопировать во второй сегмент
	mov ds,ax
	mov ax,data2 ;инициализация второго сегмента данных, в который нужно копировать первый сегмент
	mov es,ax
	cld ;сброс флага df
	lea si,A0 ;получение адреса смещения структуры A0, которую необходимо копировать
	lea di,B0 ;получение адреса смещения структуры B0, в которую нужно скопировать структуру А0
	mov	cx,length A0 ;помещаем в счетчик количество полей структуры, которые нужно переслать во вторую структуру
	rep movs B0, A0 ;выполняется пересылка структуры А0 в структуру B0
	lea dx,B0 ;в dx помещается смещение структуры B0
	;завершение работы программы
	mov ax,4c00h
	int 21h
code2 ends ;конец второго сегмента кодов
code ends
end