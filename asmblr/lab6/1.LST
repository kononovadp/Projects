Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Page     1-1


       1				.386 
       2				;======================================
					================ 
       3				;		МОДЕЛЬ МУЛЬТИПРОГРАМНОЇ
					 СИСТЕМИ 
       4				;======================================
					================ 
       5 = 000A				max_prg	equ	10 ;максимальна кількіс
					ть "одночасно" виконуваних  задач 
       6 = FFFF				 time_slice	equ	65535 ;кількіст
					ь мікросекунд, виділених на один квант 
					часу (максимальне значення 65535) 
       7 0000				_ST SEGMENT WORD STACK 'stack' use16 
       8 0000  7D00[			dw 32000 dup (?) 
       9	   ????			
      10			 ]	
      11				
      12 FA00				top label word 
      13 FA00  0064[			dw 100 dup (?);резерв для помилок антип
					ереповнення стека 
      14	   ????			
      15			 ]	
      16				
      17 FAC8				_ST	ENDS 
      18 0000				_DATA SEGMENT WORD PUBLIC 'DATA' use16 
      19				;-----------------змінні власної програ
					ми----------------- 
      20 0000  0000			z dw 0 
      21 0002  00000000			clcount dd 0 
      22				;--------------------------------------
					------------------- 
      23 0006  ????????			@ms_dos_busy dd (?) ; логічна адреса оз
					наки зайнятості MS-DOS 
      24 000A  00			int8set db 0 ;ознака перехоплення перер
					ивання від таймера 
      25 000B  00			int9set db 0 ;ознака перехоплення перер
					ивання від клавіатури 
      26 =				fon	equ max_prg	;ознака фонової
					 задачі; 
      27 000C				fonsp label word ;адреса збереження SP 
					фонової задачі 
      28 000C  FA00 ---- R		sssp dd top ;логічна адреса стека фонов
					ої задачі 
      29				; масив значень SP для задач, (для стек
					а кожної задачі відведено 1000 слів) 
      30				;задані початкові значення  
      31 0010  03E8 07D0 0BB8 0FA0	stp dw 1000,2000,3000,4000 
      32 0018  1388 1770 1B58 1F40	    dw 5000,6000,7000,8000 
      33 0020  2328 2710 2AF8 2EE0	    dw 9000,10000,11000,12000 
      34 0028  32C8 36B0 3A98 3E80	    dw 13000,14000,15000,16000 
      35 0030  0000			nprg dw 0 ;номер активної задачі (від 0
					 до ;max_prg-1) або ознака фонової зада
					чі (fon) 
      36 0032  0010[			init db 16 dup (0) ;масив стану задач 
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Page     1-2


      37	   00			
      38			 ]	
      39				
      40 0042  0010[			clock db 16 dup (1) ;масив дозволеного 
					числа квантів задач 
      41	   01			
      42			 ]	
      43				
      44 0052  0010[			clockt db 16 dup (0);масив лічильників 
					квантів задач  
      45	   00			
      46			 ]	
      47				
      48 0062  0010[			screen_addr dw 16 dup (0) ;адреса (зміщ
					ення від початку відеосторінки) області
					  виведення на екран значень задачі 
      49	   0000			
      50			 ]	
      51				
      52 0082				names label word  
      53 0082  30 54 31 54 32 54 33	db '0T1T2T3T4T5T6T7T8T9TATBTCTDTETFT' ;
					масив імен задач 
      54       54 34 54 35 54 36 54	
      55       37 54 38 54 39 54 41	
      56       54 42 54 43 54 44 54	
      57       45 54 46 54		
      58 00A2  0000			clk dw 0 ;лічильник переривань від тайм
					ера  
      59 00A4				_DATA ENDS 
      60 0000				_TEXT SEGMENT BYTE PUBLIC 'CODE' use16 
      61				ASSUME CS:_TEXT,DS:_DATA 
      62				;--------------------------------------
					---------------------- 
      63				; процедура "перехоплення" переривання 
					від таймера (int8) 
      64				;--------------------------------------
					---------------------- 
      65 0000				setint8 PROC 
      66 0000  A0 000A R		mov	al,int8set 
      67 0003  0A C0			or al,al ;контроль "перехоплення" перех
					оплень 
      68 0005  0F 85 0037 R		jnz	zero_8 
      69 0009  B4 35			MOV	AH,35H ;отримати вектор перерив
					ання 
      70 000B  B0 08			MOV AL,8 ;переривання від таймера (8) 
      71 000D  CD 21			INT 21H ;значення що повертається: es:b
					x - логічна адреса системної процедури 
					обробки переривання від таймера 
      72 000F  2E: 89 1E 0038 R		mov cs:int8ptr,bx ;зберегти логічну адр
					есу системної 
      73 0014  2E: 8C 06 003A R		mov cs:int8ptr+2,es ;процедури в сегмен
					ті кодів 
      74 0019  BA 00FE R		mov dx,offset userint8	;формування в d
					s:dx логічної 
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Page     1-3


      75 001C  1E			push ds	;адреси процедури користувача 
      76 001D  0E			push cs	;для обробки переривань від тай
					мера 
      77 001E  1F			pop ds 
      78 001F  B4 25			MOV AH,25H ;встановити вектор 
      79 0021  B0 08			MOV AL,8 ;переривання від таймера 
      80 0023  CD 21			INT 21H ;ds:dx - покажчик на користувац
					ьку процедуру оброб. переривання від та
					ймера 
      81 0025  B8 FFFF			mov	ax,time_slice ;встановити задан
					у величину кванту часу 
      82 0028  E6 40			out 40h,al ;40h - адреса 8-розрядного п
					орта таймера, через який задають період
					 таймера  
      83				   ;спочатку молодший байт, а потім ста
					рший 
      84 002A  EB 00			jmp $+2 ;стандартний метод узгодження ш
					видкісного 
      85				       	;процесора з більш повільним зо
					внішнім пристроєм.  
      86								;Припус
					каємо, що "безглузда" команда jmp очищу
					є буфер 
      87				       	;попередньої вибірки команд і, 
					тим самим, 
      88				       	;уповільнює роботу процесора. Т
					им часом 
      89				       	;зовнішній пристрій буде готови
					й прийняти наступний байт (старший байт
					) 
      90 002C  90			nop 
      91 002D  8A C4			mov al,ah  
      92 002F  E6 40			out 40h,al 
      93 0031  1F			pop ds 
      94 0032  C6 06 000A R FF		mov int8set,0ffh ;заборона повторних вх
					оджень 
      95 0037				zero_8: 
      96 0037  C3			ret 
      97 0038  0002[			int8ptr dw 2 dup (?) 
      98	   ????			
      99			 ]	
     100				
     101 003C				setint8 ENDP 
     102				;--------------------------------------
					------------------------------------ 
     103				;  Процедура відновлення вектора перери
					вання від таймера 
     104				;--------------------------------------
					------------------------------------ 
     105 003C				retint8 PROC 
     106 003C  1E			push ds 
     107 003D  52			push dx 
     108 003E  B0 FF			mov al,0ffh ;відновити нормальну роботу
					 
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Page     1-4


     109 0040  E6 40			out 40h,al ;системного таймера 
     110 0042  EB 00			jmp $+2 
     111 0044  90			nop 
     112 0045  E6 40			out 40h,al 
     113 0047  2E: 8B 16 0038 R		mov dx,cs:int8ptr 
     114 004C  2E: 8E 1E 003A R		mov ds,cs:int8ptr+2 
     115 0051  B4 25			MOV AH,25H ;відновити початковий вектор
					 
     116 0053  B0 08			MOV AL,8 ;переривання від таймера 
     117 0055  CD 21			INT 21H ;ds:dx - вказівник (логічна адр
					еса) на початкову (системну) процедуру 
					оброб. переривання від таймера 
     118 0057  5A			pop dx 
     119 0058  1F			pop ds 
     120 0059  C6 06 000A R 00		mov int8set,0h ;дозвіл наступних "перех
					оплень" 
     121 005E  C3			ret 
     122 005F				retint8 ENDP 
     123				;--------------------------------------
					--------------------- 
     124				;  процедура "перехоплення" переривання
					 від клавіатури (int9) 
     125				;--------------------------------------
					---------------------- 
     126 005F				setint9 PROC 
     127 005F  A0 000B R		mov	al,int9set 
     128 0062  0A C0			or al,al 
     129 0064  0F 85 008A R		jnz zero_9 
     130 0068  B4 35			MOV AH,35H ;отримати вектор переривання
					 
     131 006A  B0 09			MOV	AL,9 ;переривання від клавіатур
					и (9) 
     132 006C  CD 21			INT 21H ;значення що повертається: es:b
					x - вказівник на системну процедуру обр
					об. переривання від клавіатури 
     133 006E  2E: 89 1E 008B R		mov cs:int9ptr,bx ;зберегти в сегменті 
					кодів вказівник на системну процедуру 
     134 0073  2E: 8C 06 008D R		mov cs:int9ptr+2,es  
     135 0078  BA 00A9 R		mov dx,offset userint9 
     136 007B  1E			push ds 
     137 007C  0E			push cs	;ds:dx - вказівник на процедуру
					 користувача  
     138 007D  1F			pop ds ;оброб. переривання від клавіату
					ри 
     139 007E  B4 25			MOV AH,25H ;встановити вектор "перехопл
					ення" 
     140 0080  B0 09			MOV AL,9 ;переривання від клавіатури (9
					) 
     141 0082  CD 21			INT 21H  
     142 0084  1F			pop ds 
     143 0085  C6 06 000B R FF		mov int9set,0ffh ;заборона повторних вх
					оджень 
     144 008A				zero_9: 
     145 008A  C3			ret 
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Page     1-5


     146 008B  0002[			int9ptr dw 2 dup (?) 
     147	   ????			
     148			 ]	
     149				
     150 008F				setint9 ENDP 
     151				;--------------------------------------
					------------------------------------ 
     152				;Процедура відновлення попереднього (си
					стемного) вектора переривання від клаві
					атури 
     153				;--------------------------------------
					------------------------------------ 
     154 008F				retint9 PROC 
     155 008F  1E			push ds 
     156 0090  52			push dx 
     157 0091  2E: 8B 16 008B R		mov dx,cs:int9ptr ;ds:dx - покажчик на 
					початкову (системну) 
     158 0096  2E: 8E 1E 008D R		mov ds,cs:int9ptr+2	;процедуру обро
					бки переривання від клавіатури 
     159 009B  B4 25			MOV AH,25H ;встановити вектор системної
					 процедури 
     160 009D  B0 09			MOV AL,9 ;обробки переривання від клаві
					атури 
     161 009F  CD 21			INT 21H 
     162 00A1  5A			pop dx 
     163 00A2  1F			pop ds 
     164 00A3  C6 06 000B R 00		mov int9set,0h ;дозвіл наступних "перех
					оплень" 
     165 00A8  C3			ret 
     166 00A9				retint9 ENDP 
     167				;--------------------------------------
					---------------------------------------
					------------------ 
     168				;Процедура обробки переривань від клаві
					атури, 
     169				;викликається при любому натисканні або
					 відтисканні клавіш клавіатури, 
     170				;здійснює повернення в MS-DOS після від
					тискання клавіші Esc 
     171				;--------------------------------------
					---------------------------------------
					------------------- 
     172 00A9				userint9 proc far 
     173 = 0001				esc_key equ 01h ;скан-код клавіші esc 
     174 00A9  60			pusha 
     175 00AA  06			push es 
     176 00AB  E4 60			in al,60h ;ввести скан-код - розряди 0-
					6. 7-ий розряд дорівнює 0 при натисканн
					і i 1- при відтисканні 
     177 00AD  8A E0			mov ah,al 
     178 00AF  24 7F			and al,7fh 
     179 00B1  50			push ax ;al - "чистий" скан-код (без оз
					наки натискання - відтискання)  
     180 00B2  68 0A28			push 2600 
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Page     1-6


     181 00B5  E8 0272 R		call show ;відображення скан-коду на ек
					рані 
     182 00B8  3C 01			cmp al,esc_key 
     183 00BA  0F 84 00C5 R		je ui9010 
     184				; (варіант 2 організації процедури кори
					стувача) 
     185 00BE  07			pop es 
     186 00BF  61			popa 
     187 00C0  2E: FF 2E 008B R		jmp dword ptr cs:int9ptr ;перехід на си
					стемну процедуру обробки 
     188								
							 ;переривань від клавіа
					тури, яка 
     189								
							 ;виконає всі необхідні
					 дії, включаючи 
     190								
							 ;повернення в перерван
					у програму 
     191				; (варіант 1 організації процедури кори
					стувача) 
     192				; САМОСТІЙНЕ ВИРІШЕННЯ ПРОБЛЕМ З КЛАВІА
					ТУРОЮ 
     193 00C5				ui9010: 
     194 00C5  8B D8			mov bx,ax 
     195 00C7  E4 61			in al,61h ;біт 7 порта 61h призначений 
					для введення підтверджуючого імпульсу в
					 клавіатуру ПЕОМ. 
     196						  ;Клавіатура блокуєтьс
					я поки не надійде підтверджуючий імпуль
					с 
     197 00C9  8A E0			mov ah,al 
     198 00CB  0C 80			or al,80h 
     199 00CD  E6 61			out 61h,al ;виведення на клавіатуру
						L---¬ 
     200 00CF  EB 00			jmp $+2 
     201 00D1  8A C4			mov al,ah | 
1.ASM(173): warning A4001: Extra characters on line
     202 00D3  E6 61			out 61h,al ;підтверджуючого імпульсу --
					--- 
     203 00D5  B0 20			mov al,20h ;розблокувати в контролері п
					ереривання проходження запитів на перер
					ивання  
     204						   ;поточного та меншог
					о рівнів пріоритету, що забезпечить мож
					ливість наступного переривання від клав
					іатури 
     205 00D7  E6 20			out 20h,al 
     206 00D9  8B C3			mov ax,bx 
     207 00DB  3A E0			cmp ah,al ;перевірка події переривання 
					- від натискання чи від відтискання кла
					віші клавіатури 
     208 00DD  0F 84 00FB R		je ui9040 
     209				;відтискання клавіші 
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Page     1-7


     210 00E1				ui9020: 
     211 00E1  06			push es 
     212 00E2  C4 1E 0006 R		les	bx,@ms_dos_busy ;es:bx - адреса
					 ознаки зайнятості MS-DOS 
     213 00E6  26: 8A 07		mov	al,es:[bx] ;ax - ознака зайнято
					сті MS-DOS 
     214 00E9  07			pop	es 
     215 00EA  0A C0			or al,al ;перевірка якщо була перервана
					 робота MS-DOS в "невдалий" момент 
     216 00EC  0F 85 00FB R		jnz ui9040 ;то не можна від неї вимагат
					и виконання ряду функцій  
     217						   ;(в загальному випад
					ку MS-DOS не забезпечує повторне входже
					ння) 
     218 00F0  E8 003C R		call retint8 
     219 00F3  E8 008F R		call retint9 
     220 00F6  B8 4C00			mov ax,4c00h 
     221 00F9  CD 21			int 21h ;ЗАКІНЧИТИ РОБОТУ БАГАТОПРОГРАМ
					НОЇ МОДЕЛІ 
     222 00FB				ui9040: 
     223 00FB  07			pop es ;відновити стек перерваної прогр
					ами 
     224 00FC  61			popa 
     225 00FD  CF			iret ;закінчити обробку переривання 
     226 00FE				userint9 endp 
     227				;--------------------------------------
					---------------------- 
     228				;процедура обробки переривання від тайм
					ера (менеджер квантів) 
     229				;коди стану задач (використовуються в м
					асиві init) 
     230				;--------------------------------------
					---------------------- 
     231 00FE				userint8 PROC far 
     232 = 0000				ready equ 0 ;задача завантажена в пам’я
					ть і 
     233				    ;готова до початкового запуску 
     234				    ;статус встановлюється поза менедже
					ром квантів 
     235 = 0001				execute equ 1 ;задача виконується 
     236 = 0002				hesitation equ 2 ;задача призупинена і 
					чекає своєї черги 
     237 = 0004				close equ 4 ;виконання задачі завершено
					 
     238 = 0008				stop equ 8  ;задача зупинена   
     239				       ;статус встановлюється і змінюєт
					ься 
     240				    ;поза менеджера квантів 
     241 = 0010				absent equ 16 ;задача відсутня  
     242				;--------------------------------------
					---------------------- 
     243 00FE  66| 60			pushad ;збереження РОН в стеку перерван
					ої задачі 
     244 0100  1E			push ds 
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Page     1-8


     245				; (варіант 3 організації процедури кори
					стувача) 
     246 0101  9C			pushf ;програмна імітація апаратного пе
					реривання 
     247				;ВІДМІТИМО - ознака дозволу на перерива
					ння (if) апаратурою скинута в 0. 
     248 0102  2E: FF 1E 0038 R		call cs:dword ptr int8ptr ;виклик систе
					мної процедури обробки переривання int8
					, 
     249								
							  ;яка, між іншим, розб
					локує 8-ме переривання в контролері пер
					еривань  
     250								
							  ;але апаратні перерив
					ання не можливі, оскільки if=0 
     251 0107  B8 ---- R		mov ax,_data ;в перерваній програмі вмі
					ст сегментного регістра 
     252 010A  8E D8			mov ds,ax ;ds в загальному випадку може
					 бути любим 
     253 010C  FF 06 00A2 R		inc clk ;програмний лічильник перериван
					ь від таймера 
     254 0110  FF 36 00A2 R		push clk ;може бути корисним при вивчен
					ні моделі 
     255 0114  68 0988			push 2440 
     256 0117  E8 0272 R		call show ;виведення на екран значення 
					лічильника 
     257 011A  66| 33 F6		xor esi,esi 
     258 011D  8B 36 0030 R		mov si,nprg 
     259 0121  83 FE 0A			cmp si,fon ;перервана задача фонова ? 
     260 0124  0F 84 0139 R		je disp005 
     261				;перервана задача не фонова 
     262 0128  80 BC 0052 R 01		cmp clockt[si],1 ;єще не використані кв
					анти ? 
     263 012D  0F 82 0149 R		jc disp010 
     264 0131  FE 8C 0052 R		dec clockt[si] ;зменшити лічильник кван
					тів 
     265 0135  1F			pop ds 
     266 0136  66| 61			popad ;продовжити виконання перерваної 
					задачі 
     267 0138  CF			iret 
     268 0139				disp005: ;перервана задача фонова 
     269 0139  89 26 000C R		mov fonsp,sp 
     270 013D  C7 06 0030 R 0009	mov nprg,max_prg-1 ;забезпечити перегля
					д задач з 0-вої 
     271 0143  B9 000A			mov cx,max_prg ;max_prg - max кількість
					 задач 
     272 0146  EB 11 90			jmp disp015 
     273 0149				disp010: ;перервана задача не фонова 
     274 0149  67| 89 2475 00000010	mov stp[esi*2],sp   	 
     275	R			
     276 0151  C6 84 0032 R 02		mov init[si],hesitation ;призупинити по
					точну задачу 
     277 0156  B9 000A			mov cx,max_prg 
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Page     1-9


     278 0159				disp015: 
     279				;визначення задачі, якій необхідно пере
					дати управління 
     280 0159  BF 000B			mov di,max_prg+1 
     281 015C  2B F9			sub di,cx 
     282 015E  03 3E 0030 R		add di,nprg 
     283 0162  83 FF 0A			cmp di,max_prg 
     284 0165  0F 82 016C R		jc disp018 
     285 0169  83 EF 0A			sub di,max_prg 
     286 016C				disp018: 
     287 016C  66| 33 DB		xor ebx,ebx 
     288 016F  8B DF			mov bx,di 
     289				;push bx 
     290				;push 3220 
     291				;call show 
     292				; сх пробігає значення max_prg,max_prg-
					1,...,2,1 
     293				; bx пробігає значення  nprg+1,nprg+2,.
					..,max_prg-1,0,...,nprg 
     294 0171  80 BF 0032 R 00		cmp init[bx],ready 
     295 0176  0F 84 01B0 R		je disp100 ;перехід на початковий запус
					к задачі 
     296 017A  80 BF 0032 R 02		cmp init[bx],hesitation 
     297 017F  0F 84 0193 R		je disp020 ;перехід на відновлення робо
					ти наступної задачі 
     298 0183  E2 D4			loop disp015 
     299				;відсутні  задачі, які можна запустить 
					(перезапустити), тому установлюємо стек
					 фонової задачі 
     300 0185  8B 26 000C R		mov sp,fonsp 
     301 0189  C7 06 0030 R 000A	mov nprg,fon 
     302 018F  1F			pop ds ;із стека фонової задачі відновл
					юємо 
     303 0190  66| 61			popad ;вміст регістрів 
     304 0192  CF			iret ;повернення в фонову задачу 
     305 0193				disp020: ;відновлення роботи наступної 
					задачі 
     306				;push    	bx 
     307				;push   	2480 
     308				;call    	show 
     309 0193  89 1E 0030 R		mov nprg,bx 
     310 0197  67| 8B 245D 00000010	mov sp,stp[ebx*2] 
     311	R			
     312 019F  8A 87 0042 R		mov al,clock[bx] 
     313 01A3  88 87 0052 R		mov clockt[bx],al ;встановити дозволену
					 кількість квантів 
     314 01A7  C6 87 0032 R 01		mov init[bx],execute ;стан задачі - зад
					ача виконується 
     315 01AC  1F			pop ds 
     316 01AD  66| 61			popad 
     317 01AF  CF			iret 
     318 01B0				disp100: ;першопочатковий запуск задачі
					 
     319 01B0  89 1E 0030 R		mov nprg,bx 
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Page     1-10


     320 01B4  67| 8B 245D 00000010	mov sp,stp[ebx*2] 
     321	R			
     322 01BC  8A 87 0042 R		mov al,clock[bx] 
     323 01C0  88 87 0052 R		mov clockt[bx],al ;встановити дозволену
					 кількість квантів 
     324 01C4  C6 87 0032 R 01		mov init[bx],execute 
     325 01C9  67| FF 345D 00000082	push names[ebx*2] ;ім'я задачі 
     326	R			
     327 01D1  67| FF 345D 00000062	push screen_addr[ebx*2] ;адреса "вікна"
					 для задачі на екрані  
     328	R			
     329 01D9  6A 16			push 22 ;розрядність лічильника 
     330 01DB  E8 01F8 R		call Vcount ;запуск  
     331				;В подальшому процедура Vcount буде пос
					тійно перериватись. 
     332				;В дану точку програми управління може 
					бути передано тідьки по 
     333				;команді ret процедури Vcount. В свою ч
					ергу, ця команда буде виконана, 
     334				;якщо на протязі чергового каванту часу
					 завершить роботу задача,  
     335				;номер якої знаходиться в комірці nprg.
					 Для часткового контролю за цілісністю 
					 
     336				;даних в стеці можна використати той фа
					кт, що процедура Vcount передає  
     337				;в регістрі ax номер задачі (конроль не
					 реалізовано) 
     338 01DE  66| 33 F6		xor    	esi,esi 
     339 01E1  8B 36 0030 R		mov   	si,nprg    ; на ax - номер зада
					чі, яка завершила свою роботу в межах ч
					ергового кванту часу 
     340				;cmp si,ax 
     341				;je error_stack 
     342 01E5  C6 84 0032 R 04		mov init[si],close 
     343 01EA  8B 26 000C R		mov sp,fonsp 
     344 01EE  C7 06 0030 R 000A	mov nprg,fon 
     345 01F4  1F			pop ds 
     346 01F5  66| 61			popad 
     347 01F7  CF			iret ;повернення в фонову задачу 
     348 01F8				userint8 ENDP 
     349				;--------------------------------------
					---------------------- 
     350				;Vcount - процедура для моделювання нез
					алежних задач  
     351				;вхідні параметри: 
     352				;1-й - ім'я задачі (два символа) [bp+8]
					 
     353				;2-й - зміщення в відеосторінці "вікна"
					 задачі [bp+6] 
     354				;3-й - кількість двійкових розрядів ліч
					ильника [bp+4] 
     355				;Виконувані дії: 
     356				;при запуску: 
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Page     1-11


     357				;- дозволяє переривання 
     358				;- створює в стеку 10-байтну область дл
					я локальних даних 
     359				;- розміщує в цю область по адресі [bp-
					2] статок від ділення 
     360				;3-го параметра на 32 (фактична розрядн
					ість лічильника - 
     361				;перестраховка від помилок в завданні р
					озрядності) 
     362				;- записує в цю область по адресу [bp-6
					] маску з числом 
     363				;одиниць в молодших розрядів рівним фак
					тичній  
     364				;розрядності лічильника 
     365				;- записує в нуль в 4-х байт ний лічиль
					ник по адресу [bp-10] 
     366				;в подальшому в циклі: 
     367				;- виводить показники лічильника на екр
					ан 
     368				;- збільшує значення лічильника на 1 
     369				;завершення задачі після переходу лічил
					ьника  
     370				;з стану "всі одиниці" в стан всі 0 
     371				;--------------------------------------
					---------------------- 
     372 01F8				Vcount proc near 
     373 01F8  55			push bp 
     374 01F9  8B EC			mov bp,sp 
     375 01FB  83 EC 0A			sub sp,10 ;формування в стеку області д
					ля збереження даних 
     376 01FE  FB			sti 
     377 01FF  06			push es 
     378 0200  B8 B800			mov ax,0b800h 
     379 0203  8E C0			mov es,ax 
     380 0205  8B 46 04			mov ax,[bp+4] ;ax = кількість розрядів 
					лічильника 
     381 0208  25 001F			and ax,31 ;ax=ax mod 32 (для перестрахо
					вки) 
     382 020B  89 46 FE			mov [bp-2],ax ;по [bp-2] кількість розр
					. лічильника <32 
     383 020E  8B C8			mov cx,ax 
     384 0210  66| B8 00000001		mov eax,001b 
     385 0216  66| D3 E0		shl eax,cl 
     386 0219  66| 48			dec eax ;eax - маска з числом 1 рівним 
					кількості розрядів лічильника 
     387 021B  66| 89 46 FA		mov [bp-6],eax 
     388 021F  66| C7 46 F6 00000000	mov dword ptr [bp-10],0 ;скидання лічил
					ьника 
     389 0227  8B 7E 06			mov di,[bp+6] ;вивід імені задачі 
     390 022A  8B 56 08			mov dx,[bp+8] 
     391 022D  B4 0B			mov ah,1011b 
     392 022F  8A C6			mov al,dh 
     393 0231  FC			cld 
     394 0232  AB			stosw 
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Page     1-12


     395 0233  8A C2			mov al,dl 
     396 0235  AB			stosw 
     397 0236  FD			std ;підготовка до виводу лічильника 
     398 0237  03 F9			add di,cx ;починаючи с молодших розряді
					в 
     399 0239  03 F9			add di,cx 
     400 023B  8B DF			mov bx,di 
     401 023D  66| 33 D2		xor edx,edx 
     402 0240				l20: ;виведення показників лічильника  
					в форматі двійкових чисел 
     403 0240  8B FB			mov di,bx 
     404 0242  8B 4E FE			mov cx,[bp-2] 
     405 0245  B4 0A			mov ah,1010b ;атрибут символу, атрибут 
					фона - 0 (чорний) 
     406 0247				l40: 
     407 0247  B0 30			mov al,'0' 
     408 0249  66| D1 EA		shr edx,1 
     409 024C  0F 83 0252 R		jnc l60 
     410 0250  B0 31			mov al,'1' 
     411 0252				l60: 
     412 0252  AB			stosw 
     413 0253  E2 F2			loop l40 
     414 0255  66| FF 46 F6		inc dword ptr [bp-10] ;+1 в лічильник 
     415 0259  66| 8B 56 F6		mov edx,dword ptr [bp-10] 
     416 025D  66| 23 56 FA		and edx,[bp-6] ;перевірка на 0 
     417 0261  75 DD			jnz l20 
     418 0263  07			pop es 
     419 0264  83 C4 0A			add sp,10 
     420 0267  8B 46 08			mov ax,[bp+8] 
     421 026A  25 000F			and ax,0fh 
     422 026D  FA			cli 
     423 026E  5D			pop bp 
     424 026F  C2 0006			ret 6 
     425 0272				Vcount endp 
     426				 
     427				;--------------------------------------
					---------------------- 
     428				;вывід на экран 
     429				;--------------------------------------
					---------------------- 
     430 0272				show proc near 
     431 0272  55			push bp 
     432 0273  8B EC			mov bp,sp 
     433 0275  60			pusha 
     434 0276  06			push es 
     435 0277  B8 B800			mov ax,0b800h 
     436 027A  8E C0			mov es,ax 
     437 027C  FD			std 
     438 027D				ls20: 
     439 027D  8B 7E 04			mov di,[bp+4] 
     440 0280  8B 5E 06			mov bx,[bp+6] 
     441 0283  B9 0004			mov cx,4 
     442 0286  B4 0A			mov ah,0ah 
     443 0288				ls40: 
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Page     1-13


     444 0288  8A C3			mov al,bl 
     445 028A  24 0F			and al,00001111b 
     446 028C  3C 0A			cmp al,10 
     447 028E  0F 8C 0294 R		jl ls100 
     448 0292  04 07			add al,7 
     449 0294				ls100: 
     450 0294  04 30			add al,30h 
     451 0296  AB			stosw 
     452 0297  C1 EB 04			shr bx,4 
     453 029A  E2 EC			loop ls40 
     454 029C  07			pop es 
     455 029D  61			popa 
     456 029E  5D			pop bp 
     457 029F  C2 0004			ret 4 
     458 02A2				show endp 
     459				;======================================
					====================== 
     460 02A2				mouse proc far 
     461				;инициализация мыши 
     462 02A2  1E			push ds 
     463 02A3  0E			push cs 
     464 02A4  1F			pop ds 
     465 02A5  B8 B800			mov ax,0b800h 
     466 02A8  8E C0			mov es,ax 
     467 02AA  B8 ---- R		mov ax,seg _DATA 
     468 02AD  8E D8			mov ds,ax 
     469 02AF  B8 0003			mov ax,0003h 
     470 02B2  CD 33			int 33h 
     471 02B4  89 1E 0000 R		mov z,bx ;запомнить клавишу мыши 
     472 02B8  83 3E 0000 R 02		cmp z,10b ;если она правая 
     473 02BD  0F 84 030B R		je b12 ;то выйти из процедуры 
     474 02C1  BE 000A			mov si,max_prg ;поместить в si максимал
					ьное количество задач 
     475 02C4  66| FF 06 0002 R		inc clcount ;счетчик количества нажатий
					 мыши.  
     476				;определение четности количества нажати
					й 
     477 02C9  A1 0002 R		mov ax,clcount ;делитель 
1.ASM(444): warning A4031: Operand types must match
     478 02CC  B3 02			mov bl,2 ;делимое 
     479 02CE  F6 F3			div bl 
     480 02D0  80 FC 01			cmp ah,1 ;в ah - остаток от деления 
     481 02D3  0F 84 02F1 R		je stophes ;если остаток нечетный, то в
					ызвать цикл остановки задач, 
     482 02D7				resume: ;иначе происходит их возобновле
					ние 
     483 02D7  80 BC 0032 R 08		cmp init[si],stop ;сравнение статуса за
					дачи под номеров в si 
     484 02DC  0F 84 02EA R		je rea ;если задача остановлена то вызы
					ваем ее возобновление 
     485 02E0  4E			dec si ;уменьшение счетчика (переход к 
					предыдущей задаче в списке) 
     486 02E1  83 FE FF			cmp si,-1 ;если задач больше нет,  
     487 02E4  0F 84 030B R		je b12 ;то происходит выход из цикла 
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Page     1-14


     488 02E8  EB ED			jmp resume ;переход в начало цикла 
     489 02EA				rea: ;возобновление задачи 
     490 02EA  C6 84 0032 R 00		mov init[si],ready 
     491 02EF  EB E6			jmp resume 
     492				;b14: ;второй вариант - повторного запу
					ска всех задач (с любым статусом) 
     493				;mov init[si],ready 
     494				;dec si 
     495				;cmp si,0 
     496				;je b12 
     497				;loop b14 
     498 02F1				stophes: ;цикл остановки задач 
     499 02F1  4E			dec si ;переход к следующей задаче 
     500 02F2  83 FE FF			cmp si,-1 ;если задач больше нет, 
     501 02F5  0F 84 030B R		je b12 ;то выйти из цикла 
     502 02F9  80 BC 0032 R 02		cmp init[si],hesitation ;сравнение стат
					уса задачи под номеров в si 
     503 02FE  0F 84 0304 R		je read ;если статус подходящий, то выз
					вать его остановку 
     504 0302  75 ED			jne stophes ;иначе перейти в начало цик
					ла 
     505 0304				read: ;остановка задачи 
     506 0304  C6 84 0032 R 08		mov init[si],stop 
     507 0309  EB E6			jmp stophes ;переход в начало цикла 
     508				;второй вариант повторной остановки все
					х задач  (с любым статусом) 
     509				;b10: 
     510				;mov init[si],stop 
     511				;dec si 
     512				;cmp si,0 
     513				;je b12 
     514				;loop b10 
     515 030B				b12: ;выход из процедуры 
     516 030B  1F			pop ds 
     517 030C  CB			ret 
     518 030D				mouse endp 
     519				;--------------------------------------
					---------------------- 
     520				;основна программа 
     521				;--------------------------------------
					---------------------- 
     522 030D				begin: 
     523 030D  B8 ---- R		mov ax,_data 
     524 0310  8E D8			mov ds,ax 
     525 0312  B8 0003			mov ax,3 ;задати текстовий режим 80 на 
					25 
     526 0315  CD 10			int 10h 
     527 0317  B4 10			mov ah,10h ;відключити режим миготіння 
     528 0319  B0 03			mov al,3 
     529 031B  B3 00			mov bl,0 
     530 031D  CD 10			int 10h 
     531				;--------робота з мишкою-------- 
     532 031F  B8 0000			mov ax,0000h 
     533 0322  CD 33			int 33h 
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Page     1-15


     534 0324  B8 0001			mov ax,0001h 
     535 0327  CD 33			int 33h 
     536 0329  B8 000C			mov	ax,000ch	 
     537 032C  B9 000A			mov	cx,1010b 
     538 032F  BA 02A2 R		mov	dx,offset mouse 
     539 0332  0E			push cs 
     540 0333  07			pop es 
     541 0334  CD 33			int	33h 
     542				;------------------------------- 
     543 0336  B9 000A			mov cx,max_prg 
     544 0339  66| 33 F6		xor esi,esi 
     545 033C  BB 0004			mov bx,4 
     546 033F				b11: 
     547 033F  67| 89 1C75 00000062	mov screen_addr[esi*2],bx ;заповнення т
					аблиці адрес виводу для задач 
     548	R			
     549 0347  C6 84 0032 R 00		mov init[si],ready ;першопочаткове запо
					внення таблиці стану задач 
     550 034C  83 C3 50			add bx,80 
     551 034F  46			inc si 
     552 0350  E2 ED			loop b11 
     553				;SETINT 
     554 0352  FA			cli	;заборона переривань 
     555 0353  B4 34			mov	ah,34h 
     556 0355  CD 21			int	21h	;es:bx - адреса ознаки 
					зайнятості MS-DOS 
     557 0357  89 1E 0006 R		mov	word ptr @ms_dos_busy,bx 
     558 035B  8C 06 0008 R		mov	word ptr @ms_dos_busy+2,es 
     559 035F  E8 0000 R		call setint8 ;"перехоплення" int8 
     560 0362  E8 005F R		call setint9 ;"перехоплення" int9 
     561 0365  0F B2 26 000C R		lss sp,sssp	;стек фонової задачі 
     562 036A  C7 06 0030 R 000A	mov nprg,fon 
     563 0370  68 464E			push 'FN' 
     564 0373  68 0708			push 1800 
     565 0376  6A 1E			push 30 
     566 0378  E8 01F8 R		call Vcount ;запуск фонової задачі 
     567							;в процедурі Vc
					ount установлюється дозвіл 
     568							;на переривання
					 і при чергових перериваннях 
     569							;від таймера ме
					неджер квантів (userint8)  
     570							;буде запускать
					 інші задачі 
     571				;управління в цю точку буде передано по
					 команді RET по завершені фонової задач
					і, 
     572				;а це можливо лише після завершення інш
					их задач 
     573 037B  E8 003C R		call retint8 ;відновлення системних век
					торів  
     574 037E  E8 008F R		call retint9 
     575 0381  FB			sti 
     576 0382  B8 4C00			mov ax,4c00h 
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Page     1-16


     577 0385  CD 21			int 21h 
     578 0387				_TEXT ENDS 
     579				end begin 
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Symbols-1




                N a m e         	Size	Length	 Align	Combine Class

_DATA  . . . . . . . . . . . . .  	16 Bit	00A4	WORD	PUBLIC	'DATA'
_ST  . . . . . . . . . . . . . .  	16 Bit	FAC8	WORD	STACK	'STACK'
_TEXT  . . . . . . . . . . . . .  	16 Bit	0387	BYTE	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

ABSENT . . . . . . . . . . . . .  	NUMBER	0010	

B11  . . . . . . . . . . . . . .  	L NEAR	033F	_TEXT
B12  . . . . . . . . . . . . . .  	L NEAR	030B	_TEXT
BEGIN  . . . . . . . . . . . . .  	L NEAR	030D	_TEXT

CLCOUNT  . . . . . . . . . . . .  	L DWORD	0002	_DATA
CLK  . . . . . . . . . . . . . .  	L WORD	00A2	_DATA
CLOCK  . . . . . . . . . . . . .  	L BYTE	0042	_DATA	Length = 0010
CLOCKT . . . . . . . . . . . . .  	L BYTE	0052	_DATA	Length = 0010
CLOSE  . . . . . . . . . . . . .  	NUMBER	0004	

DISP005  . . . . . . . . . . . .  	L NEAR	0139	_TEXT
DISP010  . . . . . . . . . . . .  	L NEAR	0149	_TEXT
DISP015  . . . . . . . . . . . .  	L NEAR	0159	_TEXT
DISP018  . . . . . . . . . . . .  	L NEAR	016C	_TEXT
DISP020  . . . . . . . . . . . .  	L NEAR	0193	_TEXT
DISP100  . . . . . . . . . . . .  	L NEAR	01B0	_TEXT

ESC_KEY  . . . . . . . . . . . .  	NUMBER	0001	
EXECUTE  . . . . . . . . . . . .  	NUMBER	0001	

FON  . . . . . . . . . . . . . .  	ALIAS	 MAX_PRG		
FONSP  . . . . . . . . . . . . .  	L WORD	000C	_DATA

HESITATION . . . . . . . . . . .  	NUMBER	0002	

INIT . . . . . . . . . . . . . .  	L BYTE	0032	_DATA	Length = 0010
INT8PTR  . . . . . . . . . . . .  	L WORD	0038	_TEXT	Length = 0002
INT8SET  . . . . . . . . . . . .  	L BYTE	000A	_DATA
INT9PTR  . . . . . . . . . . . .  	L WORD	008B	_TEXT	Length = 0002
INT9SET  . . . . . . . . . . . .  	L BYTE	000B	_DATA

L20  . . . . . . . . . . . . . .  	L NEAR	0240	_TEXT
L40  . . . . . . . . . . . . . .  	L NEAR	0247	_TEXT
L60  . . . . . . . . . . . . . .  	L NEAR	0252	_TEXT
LS100  . . . . . . . . . . . . .  	L NEAR	0294	_TEXT
LS20 . . . . . . . . . . . . . .  	L NEAR	027D	_TEXT
LS40 . . . . . . . . . . . . . .  	L NEAR	0288	_TEXT

MAX_PRG  . . . . . . . . . . . .  	NUMBER	000A	
MOUSE  . . . . . . . . . . . . .  	F PROC	02A2	_TEXT	Length = 006B
Microsoft (R) Macro Assembler Version 5.00                  1/9/16 21:52:03
                                                             Symbols-2



NAMES  . . . . . . . . . . . . .  	L WORD	0082	_DATA
NPRG . . . . . . . . . . . . . .  	L WORD	0030	_DATA

REA  . . . . . . . . . . . . . .  	L NEAR	02EA	_TEXT
READ . . . . . . . . . . . . . .  	L NEAR	0304	_TEXT
READY  . . . . . . . . . . . . .  	NUMBER	0000	
RESUME . . . . . . . . . . . . .  	L NEAR	02D7	_TEXT
RETINT8  . . . . . . . . . . . .  	N PROC	003C	_TEXT	Length = 0023
RETINT9  . . . . . . . . . . . .  	N PROC	008F	_TEXT	Length = 001A

SCREEN_ADDR  . . . . . . . . . .  	L WORD	0062	_DATA	Length = 0010
SETINT8  . . . . . . . . . . . .  	N PROC	0000	_TEXT	Length = 003C
SETINT9  . . . . . . . . . . . .  	N PROC	005F	_TEXT	Length = 0030
SHOW . . . . . . . . . . . . . .  	N PROC	0272	_TEXT	Length = 0030
SSSP . . . . . . . . . . . . . .  	L DWORD	000C	_DATA
STOP . . . . . . . . . . . . . .  	NUMBER	0008	
STOPHES  . . . . . . . . . . . .  	L NEAR	02F1	_TEXT
STP  . . . . . . . . . . . . . .  	L WORD	0010	_DATA

TIME_SLICE . . . . . . . . . . .  	NUMBER	FFFF	
TOP  . . . . . . . . . . . . . .  	L WORD	FA00	_ST

UI9010 . . . . . . . . . . . . .  	L NEAR	00C5	_TEXT
UI9020 . . . . . . . . . . . . .  	L NEAR	00E1	_TEXT
UI9040 . . . . . . . . . . . . .  	L NEAR	00FB	_TEXT
USERINT8 . . . . . . . . . . . .  	F PROC	00FE	_TEXT	Length = 00FA
USERINT9 . . . . . . . . . . . .  	F PROC	00A9	_TEXT	Length = 0055

VCOUNT . . . . . . . . . . . . .  	N PROC	01F8	_TEXT	Length = 007A

Z  . . . . . . . . . . . . . . .  	L WORD	0000	_DATA
ZERO_8 . . . . . . . . . . . . .  	L NEAR	0037	_TEXT
ZERO_9 . . . . . . . . . . . . .  	L NEAR	008A	_TEXT

@FILENAME  . . . . . . . . . . .  	TEXT  1		
@MS_DOS_BUSY . . . . . . . . . .  	L DWORD	0006	_DATA


    545 Source  Lines
    545 Total   Lines
     69 Symbols

  49230 + 418690 Bytes symbol space free

      2 Warning Errors
      0 Severe  Errors
