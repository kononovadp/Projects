Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-1


       1				.model flat 
       2				.386p 
       3 0100				.STACK 256 
       4				descr struc 
       5 0000  0000			limit_1 dw 0 ;молодші 2 байта розміру с
					егменту (розряди 0-15) 
       6 0002  0000			base_1 dw 0 ;молодші 2 байта фізичної 3
					2-розрядної адреси сегменту  
       7 0004  00			base_2 db 0 ;3-тій байт фізичної 32-роз
					рядної адреси сегменту 
       8 0005  00			attrib db 0 ;байт атрибутів сегменту 
       9 0006  00			bt6 db 0  ;старші 4 розряди байту – атр
					ибути сегменту, 
      10				;молодші 4 розряди байту - розряди 16-1
					9 розміру сегменту 
      11 0007  00			base_3 db 0 ;4-тий байт фізичної 32-роз
					рядної адреси сегменту 
      12 0008				descr ends 
      13				;================тестовий дескриптор===
					============= 
      14				descrtest struc 
      15 0000  000A			tlimit_1 dw 10 ;молодші 2 байта розміру
					 сегменту (розряди 0-15) 
      16 0002  0000			tbase_1 dw 0 ;молодші 2 байта фізичної 
					32-розрядної адреси сегменту  
      17 0004  00			tbase_2 db 0 ;3-тій байт фізичної 32-ро
					зрядної адреси сегменту 
      18 0005  00			tattrib db 0 ;байт атрибутів сегменту 
      19 0006  00			tbt6 db 0  ;старші 4 розряди байту – ат
					рибути сегменту, 
      20				;молодші 4 розряди байту - розряди 16-1
					9 розміру сегменту 
      21 0007  00			tbase_3 db 0 ;4-тий байт фізичної 32-ро
					зрядної адреси сегменту 
      22 0008				descrtest ends 
      23				;================ 
      24 0000				test1 segment para public 'data' use16 
					; Визначення таблиці глобальних дескрип
					торів 
      25 0000  000A			tselector0 descrtest	<> 
      26 0002  0000			
      27 0004  00			
      28 0005  00			
      29 0006  00			
      30 0007  00			
      31				
      32 0008  000A			tdescr_gdt descrtest	<> 
      33 000A  0000			
      34 000C  00			
      35 000D  00			
      36 000E  00			
      37 000F  00			
      38				
      39 0010  000A			tdescr_ds descrtest <> 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-2


      40 0012  0000			
      41 0014  00			
      42 0015  00			
      43 0016  00			
      44 0017  00			
      45				
      46 0018  000A			tdescr_es descrtest <>; video 
      47 001A  0000			
      48 001C  00			
      49 001D  00			
      50 001E  00			
      51 001F  00			
      52				
      53 0020  000A			tdescr_ss descrtest <> 
      54 0022  0000			
      55 0024  00			
      56 0025  00			
      57 0026  00			
      58 0027  00			
      59				
      60 0028  000A			tdescr_cs descrtest <> 
      61 002A  0000			
      62 002C  00			
      63 002D  00			
      64 002E  00			
      65 002F  00			
      66				
      67 = 002F				tgdt_size equ $-tselector0-1 
      68 0030  000A			tdeskr_Int_code descrtest <> 
      69 0032  0000			
      70 0034  00			
      71 0035  00			
      72 0036  00			
      73 0037  00			
      74				
      75 0038				test1 ends 
      76				;================ 
      77				;ОПИС вказівника ТАБЛИЦІ ДЕСКРИПТОРІВ 
      78				point_dt struc 
      79 0000  00000000			lim dd 0 
      80 0004  00000000			adr dd 0 
      81 0008				point_dt ends 
      82				;Рекомендується розміщувати GDT в окрем
					ому  логічному  сегменті 
      83 0000				GDT segment para public 'data' use16 ; 
					Визначення таблиці глобальних дескрипто
					рів 
      84 0000  0000			selector0 descr	<> 
      85 0002  0000			
      86 0004  00			
      87 0005  00			
      88 0006  00			
      89 0007  00			
      90				
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-3


      91 0008  0000			descr_gdt descr	<> 
      92 000A  0000			
      93 000C  00			
      94 000D  00			
      95 000E  00			
      96 000F  00			
      97				
      98 0010  0000			descr_ds descr <> 
      99 0012  0000			
     100 0014  00			
     101 0015  00			
     102 0016  00			
     103 0017  00			
     104				
     105 0018  0000			descr_es descr <>; video 
     106 001A  0000			
     107 001C  00			
     108 001D  00			
     109 001E  00			
     110 001F  00			
     111				
     112 0020  0000			descr_ss descr <> 
     113 0022  0000			
     114 0024  00			
     115 0025  00			
     116 0026  00			
     117 0027  00			
     118				
     119 0028  0000			descr_cs descr <> 
     120 002A  0000			
     121 002C  00			
     122 002D  00			
     123 002E  00			
     124 002F  00			
     125				
     126 = 002F				gdt_size equ $-selector0-1 
     127 0030  0000			deskr_Int_code descr <> 
     128 0032  0000			
     129 0034  00			
     130 0035  00			
     131 0036  00			
     132 0037  00			
     133				
     134 0038				GDT ends 
     135				 
     136				;Визначимо  вказівник для GDT (в логічн
					ому сегменті даних _DATA): 
     137 0000				ST_p segment use16 
     138 0000  03E8[			Db 1000 dup (0) 
     139	   00			
     140			 ]	
     141				
     142 03E8  03E8			Top_stp	dw 1000;equ	$; Top_stp=1000
					 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-4


     143 03EA				ST_p ends 
     144 0000				IDT	segment para public 'data' use1
					6 
     145 = 0000				Vector=0 
     146				Rept 256 
     147				Dw Vector * Proc_int_size; зміщення про
					цедури 
     148				Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     149				Db 0; завжди 0 
     150				Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     151				Dw 0; всі процедури розміщуються в перш
					их 64К 
     152				Vector=Vector+1 
     153				Endm 
     154 0000  0000                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     155 0002  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     156 0004  00                    1	Db 0; завжди 0 
     157 0005  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     158 0006  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     159 0008  0007                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     160 000A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     161 000C  00                    1	Db 0; завжди 0 
     162 000D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     163 000E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     164 0010  000E                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     165 0012  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     166 0014  00                    1	Db 0; завжди 0 
     167 0015  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     168 0016  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     169 0018  0015                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     170 001A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     171 001C  00                    1	Db 0; завжди 0 
     172 001D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     173 001E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     174 0020  001C                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-5


     175 0022  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     176 0024  00                    1	Db 0; завжди 0 
     177 0025  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     178 0026  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     179 0028  0023                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     180 002A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     181 002C  00                    1	Db 0; завжди 0 
     182 002D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     183 002E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     184 0030  002A                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     185 0032  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     186 0034  00                    1	Db 0; завжди 0 
     187 0035  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     188 0036  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     189 0038  0031                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     190 003A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     191 003C  00                    1	Db 0; завжди 0 
     192 003D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     193 003E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     194 0040  0038                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     195 0042  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     196 0044  00                    1	Db 0; завжди 0 
     197 0045  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     198 0046  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     199 0048  003F                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     200 004A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     201 004C  00                    1	Db 0; завжди 0 
     202 004D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     203 004E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     204 0050  0046                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-6


     205 0052  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     206 0054  00                    1	Db 0; завжди 0 
     207 0055  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     208 0056  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     209 0058  004D                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     210 005A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     211 005C  00                    1	Db 0; завжди 0 
     212 005D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     213 005E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     214 0060  0054                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     215 0062  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     216 0064  00                    1	Db 0; завжди 0 
     217 0065  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     218 0066  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     219 0068  005B                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     220 006A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     221 006C  00                    1	Db 0; завжди 0 
     222 006D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     223 006E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     224 0070  0062                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     225 0072  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     226 0074  00                    1	Db 0; завжди 0 
     227 0075  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     228 0076  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     229 0078  0069                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     230 007A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     231 007C  00                    1	Db 0; завжди 0 
     232 007D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     233 007E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     234 0080  0070                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-7


     235 0082  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     236 0084  00                    1	Db 0; завжди 0 
     237 0085  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     238 0086  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     239 0088  0077                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     240 008A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     241 008C  00                    1	Db 0; завжди 0 
     242 008D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     243 008E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     244 0090  007E                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     245 0092  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     246 0094  00                    1	Db 0; завжди 0 
     247 0095  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     248 0096  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     249 0098  0085                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     250 009A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     251 009C  00                    1	Db 0; завжди 0 
     252 009D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     253 009E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     254 00A0  008C                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     255 00A2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     256 00A4  00                    1	Db 0; завжди 0 
     257 00A5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     258 00A6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     259 00A8  0093                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     260 00AA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     261 00AC  00                    1	Db 0; завжди 0 
     262 00AD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     263 00AE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     264 00B0  009A                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-8


     265 00B2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     266 00B4  00                    1	Db 0; завжди 0 
     267 00B5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     268 00B6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     269 00B8  00A1                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     270 00BA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     271 00BC  00                    1	Db 0; завжди 0 
     272 00BD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     273 00BE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     274 00C0  00A8                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     275 00C2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     276 00C4  00                    1	Db 0; завжди 0 
     277 00C5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     278 00C6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     279 00C8  00AF                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     280 00CA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     281 00CC  00                    1	Db 0; завжди 0 
     282 00CD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     283 00CE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     284 00D0  00B6                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     285 00D2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     286 00D4  00                    1	Db 0; завжди 0 
     287 00D5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     288 00D6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     289 00D8  00BD                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     290 00DA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     291 00DC  00                    1	Db 0; завжди 0 
     292 00DD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     293 00DE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     294 00E0  00C4                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-9


     295 00E2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     296 00E4  00                    1	Db 0; завжди 0 
     297 00E5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     298 00E6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     299 00E8  00CB                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     300 00EA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     301 00EC  00                    1	Db 0; завжди 0 
     302 00ED  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     303 00EE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     304 00F0  00D2                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     305 00F2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     306 00F4  00                    1	Db 0; завжди 0 
     307 00F5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     308 00F6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     309 00F8  00D9                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     310 00FA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     311 00FC  00                    1	Db 0; завжди 0 
     312 00FD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     313 00FE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     314 0100  00E0                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     315 0102  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     316 0104  00                    1	Db 0; завжди 0 
     317 0105  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     318 0106  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     319 0108  00E7                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     320 010A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     321 010C  00                    1	Db 0; завжди 0 
     322 010D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     323 010E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     324 0110  00EE                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-10


     325 0112  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     326 0114  00                    1	Db 0; завжди 0 
     327 0115  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     328 0116  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     329 0118  00F5                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     330 011A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     331 011C  00                    1	Db 0; завжди 0 
     332 011D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     333 011E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     334 0120  00FC                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     335 0122  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     336 0124  00                    1	Db 0; завжди 0 
     337 0125  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     338 0126  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     339 0128  0103                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     340 012A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     341 012C  00                    1	Db 0; завжди 0 
     342 012D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     343 012E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     344 0130  010A                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     345 0132  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     346 0134  00                    1	Db 0; завжди 0 
     347 0135  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     348 0136  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     349 0138  0111                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     350 013A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     351 013C  00                    1	Db 0; завжди 0 
     352 013D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     353 013E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     354 0140  0118                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-11


     355 0142  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     356 0144  00                    1	Db 0; завжди 0 
     357 0145  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     358 0146  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     359 0148  011F                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     360 014A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     361 014C  00                    1	Db 0; завжди 0 
     362 014D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     363 014E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     364 0150  0126                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     365 0152  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     366 0154  00                    1	Db 0; завжди 0 
     367 0155  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     368 0156  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     369 0158  012D                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     370 015A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     371 015C  00                    1	Db 0; завжди 0 
     372 015D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     373 015E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     374 0160  0134                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     375 0162  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     376 0164  00                    1	Db 0; завжди 0 
     377 0165  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     378 0166  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     379 0168  013B                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     380 016A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     381 016C  00                    1	Db 0; завжди 0 
     382 016D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     383 016E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     384 0170  0142                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-12


     385 0172  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     386 0174  00                    1	Db 0; завжди 0 
     387 0175  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     388 0176  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     389 0178  0149                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     390 017A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     391 017C  00                    1	Db 0; завжди 0 
     392 017D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     393 017E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     394 0180  0150                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     395 0182  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     396 0184  00                    1	Db 0; завжди 0 
     397 0185  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     398 0186  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     399 0188  0157                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     400 018A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     401 018C  00                    1	Db 0; завжди 0 
     402 018D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     403 018E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     404 0190  015E                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     405 0192  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     406 0194  00                    1	Db 0; завжди 0 
     407 0195  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     408 0196  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     409 0198  0165                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     410 019A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     411 019C  00                    1	Db 0; завжди 0 
     412 019D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     413 019E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     414 01A0  016C                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-13


     415 01A2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     416 01A4  00                    1	Db 0; завжди 0 
     417 01A5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     418 01A6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     419 01A8  0173                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     420 01AA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     421 01AC  00                    1	Db 0; завжди 0 
     422 01AD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     423 01AE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     424 01B0  017A                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     425 01B2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     426 01B4  00                    1	Db 0; завжди 0 
     427 01B5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     428 01B6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     429 01B8  0181                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     430 01BA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     431 01BC  00                    1	Db 0; завжди 0 
     432 01BD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     433 01BE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     434 01C0  0188                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     435 01C2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     436 01C4  00                    1	Db 0; завжди 0 
     437 01C5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     438 01C6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     439 01C8  018F                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     440 01CA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     441 01CC  00                    1	Db 0; завжди 0 
     442 01CD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     443 01CE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     444 01D0  0196                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-14


     445 01D2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     446 01D4  00                    1	Db 0; завжди 0 
     447 01D5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     448 01D6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     449 01D8  019D                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     450 01DA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     451 01DC  00                    1	Db 0; завжди 0 
     452 01DD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     453 01DE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     454 01E0  01A4                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     455 01E2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     456 01E4  00                    1	Db 0; завжди 0 
     457 01E5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     458 01E6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     459 01E8  01AB                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     460 01EA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     461 01EC  00                    1	Db 0; завжди 0 
     462 01ED  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     463 01EE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     464 01F0  01B2                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     465 01F2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     466 01F4  00                    1	Db 0; завжди 0 
     467 01F5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     468 01F6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     469 01F8  01B9                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     470 01FA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     471 01FC  00                    1	Db 0; завжди 0 
     472 01FD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     473 01FE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     474 0200  01C0                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-15


     475 0202  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     476 0204  00                    1	Db 0; завжди 0 
     477 0205  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     478 0206  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     479 0208  01C7                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     480 020A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     481 020C  00                    1	Db 0; завжди 0 
     482 020D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     483 020E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     484 0210  01CE                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     485 0212  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     486 0214  00                    1	Db 0; завжди 0 
     487 0215  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     488 0216  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     489 0218  01D5                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     490 021A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     491 021C  00                    1	Db 0; завжди 0 
     492 021D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     493 021E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     494 0220  01DC                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     495 0222  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     496 0224  00                    1	Db 0; завжди 0 
     497 0225  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     498 0226  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     499 0228  01E3                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     500 022A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     501 022C  00                    1	Db 0; завжди 0 
     502 022D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     503 022E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     504 0230  01EA                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-16


     505 0232  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     506 0234  00                    1	Db 0; завжди 0 
     507 0235  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     508 0236  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     509 0238  01F1                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     510 023A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     511 023C  00                    1	Db 0; завжди 0 
     512 023D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     513 023E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     514 0240  01F8                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     515 0242  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     516 0244  00                    1	Db 0; завжди 0 
     517 0245  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     518 0246  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     519 0248  01FF                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     520 024A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     521 024C  00                    1	Db 0; завжди 0 
     522 024D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     523 024E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     524 0250  0206                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     525 0252  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     526 0254  00                    1	Db 0; завжди 0 
     527 0255  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     528 0256  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     529 0258  020D                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     530 025A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     531 025C  00                    1	Db 0; завжди 0 
     532 025D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     533 025E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     534 0260  0214                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-17


     535 0262  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     536 0264  00                    1	Db 0; завжди 0 
     537 0265  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     538 0266  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     539 0268  021B                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     540 026A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     541 026C  00                    1	Db 0; завжди 0 
     542 026D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     543 026E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     544 0270  0222                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     545 0272  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     546 0274  00                    1	Db 0; завжди 0 
     547 0275  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     548 0276  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     549 0278  0229                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     550 027A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     551 027C  00                    1	Db 0; завжди 0 
     552 027D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     553 027E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     554 0280  0230                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     555 0282  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     556 0284  00                    1	Db 0; завжди 0 
     557 0285  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     558 0286  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     559 0288  0237                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     560 028A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     561 028C  00                    1	Db 0; завжди 0 
     562 028D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     563 028E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     564 0290  023E                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-18


     565 0292  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     566 0294  00                    1	Db 0; завжди 0 
     567 0295  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     568 0296  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     569 0298  0245                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     570 029A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     571 029C  00                    1	Db 0; завжди 0 
     572 029D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     573 029E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     574 02A0  024C                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     575 02A2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     576 02A4  00                    1	Db 0; завжди 0 
     577 02A5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     578 02A6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     579 02A8  0253                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     580 02AA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     581 02AC  00                    1	Db 0; завжди 0 
     582 02AD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     583 02AE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     584 02B0  025A                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     585 02B2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     586 02B4  00                    1	Db 0; завжди 0 
     587 02B5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     588 02B6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     589 02B8  0261                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     590 02BA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     591 02BC  00                    1	Db 0; завжди 0 
     592 02BD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     593 02BE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     594 02C0  0268                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-19


     595 02C2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     596 02C4  00                    1	Db 0; завжди 0 
     597 02C5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     598 02C6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     599 02C8  026F                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     600 02CA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     601 02CC  00                    1	Db 0; завжди 0 
     602 02CD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     603 02CE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     604 02D0  0276                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     605 02D2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     606 02D4  00                    1	Db 0; завжди 0 
     607 02D5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     608 02D6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     609 02D8  027D                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     610 02DA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     611 02DC  00                    1	Db 0; завжди 0 
     612 02DD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     613 02DE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     614 02E0  0284                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     615 02E2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     616 02E4  00                    1	Db 0; завжди 0 
     617 02E5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     618 02E6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     619 02E8  028B                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     620 02EA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     621 02EC  00                    1	Db 0; завжди 0 
     622 02ED  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     623 02EE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     624 02F0  0292                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-20


     625 02F2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     626 02F4  00                    1	Db 0; завжди 0 
     627 02F5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     628 02F6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     629 02F8  0299                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     630 02FA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     631 02FC  00                    1	Db 0; завжди 0 
     632 02FD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     633 02FE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     634 0300  02A0                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     635 0302  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     636 0304  00                    1	Db 0; завжди 0 
     637 0305  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     638 0306  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     639 0308  02A7                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     640 030A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     641 030C  00                    1	Db 0; завжди 0 
     642 030D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     643 030E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     644 0310  02AE                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     645 0312  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     646 0314  00                    1	Db 0; завжди 0 
     647 0315  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     648 0316  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     649 0318  02B5                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     650 031A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     651 031C  00                    1	Db 0; завжди 0 
     652 031D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     653 031E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     654 0320  02BC                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-21


     655 0322  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     656 0324  00                    1	Db 0; завжди 0 
     657 0325  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     658 0326  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     659 0328  02C3                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     660 032A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     661 032C  00                    1	Db 0; завжди 0 
     662 032D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     663 032E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     664 0330  02CA                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     665 0332  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     666 0334  00                    1	Db 0; завжди 0 
     667 0335  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     668 0336  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     669 0338  02D1                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     670 033A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     671 033C  00                    1	Db 0; завжди 0 
     672 033D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     673 033E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     674 0340  02D8                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     675 0342  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     676 0344  00                    1	Db 0; завжди 0 
     677 0345  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     678 0346  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     679 0348  02DF                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     680 034A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     681 034C  00                    1	Db 0; завжди 0 
     682 034D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     683 034E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     684 0350  02E6                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-22


     685 0352  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     686 0354  00                    1	Db 0; завжди 0 
     687 0355  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     688 0356  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     689 0358  02ED                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     690 035A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     691 035C  00                    1	Db 0; завжди 0 
     692 035D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     693 035E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     694 0360  02F4                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     695 0362  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     696 0364  00                    1	Db 0; завжди 0 
     697 0365  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     698 0366  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     699 0368  02FB                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     700 036A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     701 036C  00                    1	Db 0; завжди 0 
     702 036D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     703 036E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     704 0370  0302                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     705 0372  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     706 0374  00                    1	Db 0; завжди 0 
     707 0375  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     708 0376  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     709 0378  0309                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     710 037A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     711 037C  00                    1	Db 0; завжди 0 
     712 037D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     713 037E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     714 0380  0310                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-23


     715 0382  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     716 0384  00                    1	Db 0; завжди 0 
     717 0385  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     718 0386  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     719 0388  0317                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     720 038A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     721 038C  00                    1	Db 0; завжди 0 
     722 038D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     723 038E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     724 0390  031E                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     725 0392  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     726 0394  00                    1	Db 0; завжди 0 
     727 0395  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     728 0396  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     729 0398  0325                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     730 039A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     731 039C  00                    1	Db 0; завжди 0 
     732 039D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     733 039E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     734 03A0  032C                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     735 03A2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     736 03A4  00                    1	Db 0; завжди 0 
     737 03A5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     738 03A6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     739 03A8  0333                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     740 03AA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     741 03AC  00                    1	Db 0; завжди 0 
     742 03AD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     743 03AE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     744 03B0  033A                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-24


     745 03B2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     746 03B4  00                    1	Db 0; завжди 0 
     747 03B5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     748 03B6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     749 03B8  0341                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     750 03BA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     751 03BC  00                    1	Db 0; завжди 0 
     752 03BD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     753 03BE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     754 03C0  0348                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     755 03C2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     756 03C4  00                    1	Db 0; завжди 0 
     757 03C5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     758 03C6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     759 03C8  034F                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     760 03CA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     761 03CC  00                    1	Db 0; завжди 0 
     762 03CD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     763 03CE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     764 03D0  0356                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     765 03D2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     766 03D4  00                    1	Db 0; завжди 0 
     767 03D5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     768 03D6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     769 03D8  035D                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     770 03DA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     771 03DC  00                    1	Db 0; завжди 0 
     772 03DD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     773 03DE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     774 03E0  0364                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-25


     775 03E2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     776 03E4  00                    1	Db 0; завжди 0 
     777 03E5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     778 03E6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     779 03E8  036B                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     780 03EA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     781 03EC  00                    1	Db 0; завжди 0 
     782 03ED  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     783 03EE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     784 03F0  0372                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     785 03F2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     786 03F4  00                    1	Db 0; завжди 0 
     787 03F5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     788 03F6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     789 03F8  0379                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     790 03FA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     791 03FC  00                    1	Db 0; завжди 0 
     792 03FD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     793 03FE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     794 0400  0380                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     795 0402  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     796 0404  00                    1	Db 0; завжди 0 
     797 0405  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     798 0406  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     799 0408  0387                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     800 040A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     801 040C  00                    1	Db 0; завжди 0 
     802 040D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     803 040E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     804 0410  038E                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-26


     805 0412  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     806 0414  00                    1	Db 0; завжди 0 
     807 0415  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     808 0416  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     809 0418  0395                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     810 041A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     811 041C  00                    1	Db 0; завжди 0 
     812 041D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     813 041E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     814 0420  039C                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     815 0422  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     816 0424  00                    1	Db 0; завжди 0 
     817 0425  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     818 0426  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     819 0428  03A3                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     820 042A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     821 042C  00                    1	Db 0; завжди 0 
     822 042D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     823 042E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     824 0430  03AA                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     825 0432  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     826 0434  00                    1	Db 0; завжди 0 
     827 0435  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     828 0436  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     829 0438  03B1                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     830 043A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     831 043C  00                    1	Db 0; завжди 0 
     832 043D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     833 043E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     834 0440  03B8                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-27


     835 0442  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     836 0444  00                    1	Db 0; завжди 0 
     837 0445  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     838 0446  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     839 0448  03BF                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     840 044A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     841 044C  00                    1	Db 0; завжди 0 
     842 044D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     843 044E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     844 0450  03C6                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     845 0452  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     846 0454  00                    1	Db 0; завжди 0 
     847 0455  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     848 0456  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     849 0458  03CD                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     850 045A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     851 045C  00                    1	Db 0; завжди 0 
     852 045D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     853 045E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     854 0460  03D4                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     855 0462  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     856 0464  00                    1	Db 0; завжди 0 
     857 0465  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     858 0466  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     859 0468  03DB                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     860 046A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     861 046C  00                    1	Db 0; завжди 0 
     862 046D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     863 046E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     864 0470  03E2                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-28


     865 0472  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     866 0474  00                    1	Db 0; завжди 0 
     867 0475  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     868 0476  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     869 0478  03E9                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     870 047A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     871 047C  00                    1	Db 0; завжди 0 
     872 047D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     873 047E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     874 0480  03F0                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     875 0482  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     876 0484  00                    1	Db 0; завжди 0 
     877 0485  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     878 0486  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     879 0488  03F7                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     880 048A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     881 048C  00                    1	Db 0; завжди 0 
     882 048D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     883 048E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     884 0490  03FE                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     885 0492  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     886 0494  00                    1	Db 0; завжди 0 
     887 0495  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     888 0496  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     889 0498  0405                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     890 049A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     891 049C  00                    1	Db 0; завжди 0 
     892 049D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     893 049E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     894 04A0  040C                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-29


     895 04A2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     896 04A4  00                    1	Db 0; завжди 0 
     897 04A5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     898 04A6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     899 04A8  0413                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     900 04AA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     901 04AC  00                    1	Db 0; завжди 0 
     902 04AD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     903 04AE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     904 04B0  041A                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     905 04B2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     906 04B4  00                    1	Db 0; завжди 0 
     907 04B5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     908 04B6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     909 04B8  0421                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     910 04BA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     911 04BC  00                    1	Db 0; завжди 0 
     912 04BD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     913 04BE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     914 04C0  0428                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     915 04C2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     916 04C4  00                    1	Db 0; завжди 0 
     917 04C5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     918 04C6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     919 04C8  042F                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     920 04CA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     921 04CC  00                    1	Db 0; завжди 0 
     922 04CD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     923 04CE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     924 04D0  0436                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-30


     925 04D2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     926 04D4  00                    1	Db 0; завжди 0 
     927 04D5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     928 04D6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     929 04D8  043D                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     930 04DA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     931 04DC  00                    1	Db 0; завжди 0 
     932 04DD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     933 04DE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     934 04E0  0444                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     935 04E2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     936 04E4  00                    1	Db 0; завжди 0 
     937 04E5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     938 04E6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     939 04E8  044B                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     940 04EA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     941 04EC  00                    1	Db 0; завжди 0 
     942 04ED  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     943 04EE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     944 04F0  0452                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     945 04F2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     946 04F4  00                    1	Db 0; завжди 0 
     947 04F5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     948 04F6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     949 04F8  0459                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     950 04FA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     951 04FC  00                    1	Db 0; завжди 0 
     952 04FD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     953 04FE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     954 0500  0460                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-31


     955 0502  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     956 0504  00                    1	Db 0; завжди 0 
     957 0505  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     958 0506  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     959 0508  0467                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     960 050A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     961 050C  00                    1	Db 0; завжди 0 
     962 050D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     963 050E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     964 0510  046E                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     965 0512  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     966 0514  00                    1	Db 0; завжди 0 
     967 0515  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     968 0516  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     969 0518  0475                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     970 051A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     971 051C  00                    1	Db 0; завжди 0 
     972 051D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     973 051E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     974 0520  047C                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     975 0522  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     976 0524  00                    1	Db 0; завжди 0 
     977 0525  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     978 0526  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     979 0528  0483                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     980 052A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     981 052C  00                    1	Db 0; завжди 0 
     982 052D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     983 052E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     984 0530  048A                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-32


     985 0532  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     986 0534  00                    1	Db 0; завжди 0 
     987 0535  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     988 0536  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     989 0538  0491                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     990 053A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     991 053C  00                    1	Db 0; завжди 0 
     992 053D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     993 053E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     994 0540  0498                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
     995 0542  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
     996 0544  00                    1	Db 0; завжди 0 
     997 0545  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
     998 0546  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
     999 0548  049F                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1000 054A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1001 054C  00                    1	Db 0; завжди 0 
    1002 054D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1003 054E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1004 0550  04A6                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1005 0552  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1006 0554  00                    1	Db 0; завжди 0 
    1007 0555  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1008 0556  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1009 0558  04AD                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1010 055A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1011 055C  00                    1	Db 0; завжди 0 
    1012 055D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1013 055E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1014 0560  04B4                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-33


    1015 0562  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1016 0564  00                    1	Db 0; завжди 0 
    1017 0565  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1018 0566  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1019 0568  04BB                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1020 056A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1021 056C  00                    1	Db 0; завжди 0 
    1022 056D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1023 056E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1024 0570  04C2                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1025 0572  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1026 0574  00                    1	Db 0; завжди 0 
    1027 0575  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1028 0576  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1029 0578  04C9                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1030 057A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1031 057C  00                    1	Db 0; завжди 0 
    1032 057D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1033 057E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1034 0580  04D0                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1035 0582  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1036 0584  00                    1	Db 0; завжди 0 
    1037 0585  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1038 0586  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1039 0588  04D7                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1040 058A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1041 058C  00                    1	Db 0; завжди 0 
    1042 058D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1043 058E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1044 0590  04DE                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-34


    1045 0592  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1046 0594  00                    1	Db 0; завжди 0 
    1047 0595  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1048 0596  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1049 0598  04E5                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1050 059A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1051 059C  00                    1	Db 0; завжди 0 
    1052 059D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1053 059E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1054 05A0  04EC                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1055 05A2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1056 05A4  00                    1	Db 0; завжди 0 
    1057 05A5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1058 05A6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1059 05A8  04F3                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1060 05AA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1061 05AC  00                    1	Db 0; завжди 0 
    1062 05AD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1063 05AE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1064 05B0  04FA                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1065 05B2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1066 05B4  00                    1	Db 0; завжди 0 
    1067 05B5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1068 05B6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1069 05B8  0501                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1070 05BA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1071 05BC  00                    1	Db 0; завжди 0 
    1072 05BD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1073 05BE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1074 05C0  0508                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-35


    1075 05C2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1076 05C4  00                    1	Db 0; завжди 0 
    1077 05C5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1078 05C6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1079 05C8  050F                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1080 05CA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1081 05CC  00                    1	Db 0; завжди 0 
    1082 05CD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1083 05CE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1084 05D0  0516                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1085 05D2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1086 05D4  00                    1	Db 0; завжди 0 
    1087 05D5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1088 05D6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1089 05D8  051D                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1090 05DA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1091 05DC  00                    1	Db 0; завжди 0 
    1092 05DD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1093 05DE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1094 05E0  0524                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1095 05E2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1096 05E4  00                    1	Db 0; завжди 0 
    1097 05E5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1098 05E6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1099 05E8  052B                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1100 05EA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1101 05EC  00                    1	Db 0; завжди 0 
    1102 05ED  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1103 05EE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1104 05F0  0532                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-36


    1105 05F2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1106 05F4  00                    1	Db 0; завжди 0 
    1107 05F5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1108 05F6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1109 05F8  0539                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1110 05FA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1111 05FC  00                    1	Db 0; завжди 0 
    1112 05FD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1113 05FE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1114 0600  0540                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1115 0602  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1116 0604  00                    1	Db 0; завжди 0 
    1117 0605  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1118 0606  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1119 0608  0547                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1120 060A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1121 060C  00                    1	Db 0; завжди 0 
    1122 060D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1123 060E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1124 0610  054E                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1125 0612  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1126 0614  00                    1	Db 0; завжди 0 
    1127 0615  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1128 0616  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1129 0618  0555                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1130 061A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1131 061C  00                    1	Db 0; завжди 0 
    1132 061D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1133 061E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1134 0620  055C                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-37


    1135 0622  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1136 0624  00                    1	Db 0; завжди 0 
    1137 0625  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1138 0626  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1139 0628  0563                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1140 062A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1141 062C  00                    1	Db 0; завжди 0 
    1142 062D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1143 062E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1144 0630  056A                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1145 0632  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1146 0634  00                    1	Db 0; завжди 0 
    1147 0635  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1148 0636  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1149 0638  0571                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1150 063A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1151 063C  00                    1	Db 0; завжди 0 
    1152 063D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1153 063E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1154 0640  0578                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1155 0642  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1156 0644  00                    1	Db 0; завжди 0 
    1157 0645  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1158 0646  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1159 0648  057F                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1160 064A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1161 064C  00                    1	Db 0; завжди 0 
    1162 064D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1163 064E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1164 0650  0586                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-38


    1165 0652  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1166 0654  00                    1	Db 0; завжди 0 
    1167 0655  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1168 0656  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1169 0658  058D                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1170 065A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1171 065C  00                    1	Db 0; завжди 0 
    1172 065D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1173 065E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1174 0660  0594                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1175 0662  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1176 0664  00                    1	Db 0; завжди 0 
    1177 0665  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1178 0666  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1179 0668  059B                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1180 066A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1181 066C  00                    1	Db 0; завжди 0 
    1182 066D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1183 066E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1184 0670  05A2                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1185 0672  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1186 0674  00                    1	Db 0; завжди 0 
    1187 0675  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1188 0676  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1189 0678  05A9                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1190 067A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1191 067C  00                    1	Db 0; завжди 0 
    1192 067D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1193 067E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1194 0680  05B0                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-39


    1195 0682  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1196 0684  00                    1	Db 0; завжди 0 
    1197 0685  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1198 0686  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1199 0688  05B7                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1200 068A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1201 068C  00                    1	Db 0; завжди 0 
    1202 068D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1203 068E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1204 0690  05BE                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1205 0692  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1206 0694  00                    1	Db 0; завжди 0 
    1207 0695  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1208 0696  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1209 0698  05C5                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1210 069A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1211 069C  00                    1	Db 0; завжди 0 
    1212 069D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1213 069E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1214 06A0  05CC                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1215 06A2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1216 06A4  00                    1	Db 0; завжди 0 
    1217 06A5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1218 06A6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1219 06A8  05D3                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1220 06AA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1221 06AC  00                    1	Db 0; завжди 0 
    1222 06AD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1223 06AE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1224 06B0  05DA                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-40


    1225 06B2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1226 06B4  00                    1	Db 0; завжди 0 
    1227 06B5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1228 06B6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1229 06B8  05E1                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1230 06BA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1231 06BC  00                    1	Db 0; завжди 0 
    1232 06BD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1233 06BE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1234 06C0  05E8                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1235 06C2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1236 06C4  00                    1	Db 0; завжди 0 
    1237 06C5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1238 06C6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1239 06C8  05EF                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1240 06CA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1241 06CC  00                    1	Db 0; завжди 0 
    1242 06CD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1243 06CE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1244 06D0  05F6                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1245 06D2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1246 06D4  00                    1	Db 0; завжди 0 
    1247 06D5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1248 06D6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1249 06D8  05FD                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1250 06DA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1251 06DC  00                    1	Db 0; завжди 0 
    1252 06DD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1253 06DE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1254 06E0  0604                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-41


    1255 06E2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1256 06E4  00                    1	Db 0; завжди 0 
    1257 06E5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1258 06E6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1259 06E8  060B                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1260 06EA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1261 06EC  00                    1	Db 0; завжди 0 
    1262 06ED  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1263 06EE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1264 06F0  0612                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1265 06F2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1266 06F4  00                    1	Db 0; завжди 0 
    1267 06F5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1268 06F6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1269 06F8  0619                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1270 06FA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1271 06FC  00                    1	Db 0; завжди 0 
    1272 06FD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1273 06FE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1274 0700  0620                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1275 0702  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1276 0704  00                    1	Db 0; завжди 0 
    1277 0705  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1278 0706  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1279 0708  0627                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1280 070A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1281 070C  00                    1	Db 0; завжди 0 
    1282 070D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1283 070E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1284 0710  062E                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-42


    1285 0712  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1286 0714  00                    1	Db 0; завжди 0 
    1287 0715  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1288 0716  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1289 0718  0635                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1290 071A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1291 071C  00                    1	Db 0; завжди 0 
    1292 071D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1293 071E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1294 0720  063C                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1295 0722  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1296 0724  00                    1	Db 0; завжди 0 
    1297 0725  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1298 0726  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1299 0728  0643                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1300 072A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1301 072C  00                    1	Db 0; завжди 0 
    1302 072D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1303 072E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1304 0730  064A                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1305 0732  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1306 0734  00                    1	Db 0; завжди 0 
    1307 0735  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1308 0736  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1309 0738  0651                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1310 073A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1311 073C  00                    1	Db 0; завжди 0 
    1312 073D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1313 073E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1314 0740  0658                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-43


    1315 0742  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1316 0744  00                    1	Db 0; завжди 0 
    1317 0745  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1318 0746  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1319 0748  065F                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1320 074A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1321 074C  00                    1	Db 0; завжди 0 
    1322 074D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1323 074E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1324 0750  0666                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1325 0752  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1326 0754  00                    1	Db 0; завжди 0 
    1327 0755  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1328 0756  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1329 0758  066D                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1330 075A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1331 075C  00                    1	Db 0; завжди 0 
    1332 075D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1333 075E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1334 0760  0674                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1335 0762  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1336 0764  00                    1	Db 0; завжди 0 
    1337 0765  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1338 0766  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1339 0768  067B                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1340 076A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1341 076C  00                    1	Db 0; завжди 0 
    1342 076D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1343 076E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1344 0770  0682                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-44


    1345 0772  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1346 0774  00                    1	Db 0; завжди 0 
    1347 0775  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1348 0776  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1349 0778  0689                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1350 077A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1351 077C  00                    1	Db 0; завжди 0 
    1352 077D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1353 077E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1354 0780  0690                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1355 0782  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1356 0784  00                    1	Db 0; завжди 0 
    1357 0785  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1358 0786  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1359 0788  0697                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1360 078A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1361 078C  00                    1	Db 0; завжди 0 
    1362 078D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1363 078E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1364 0790  069E                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1365 0792  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1366 0794  00                    1	Db 0; завжди 0 
    1367 0795  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1368 0796  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1369 0798  06A5                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1370 079A  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1371 079C  00                    1	Db 0; завжди 0 
    1372 079D  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1373 079E  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1374 07A0  06AC                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-45


    1375 07A2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1376 07A4  00                    1	Db 0; завжди 0 
    1377 07A5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1378 07A6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1379 07A8  06B3                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1380 07AA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1381 07AC  00                    1	Db 0; завжди 0 
    1382 07AD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1383 07AE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1384 07B0  06BA                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1385 07B2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1386 07B4  00                    1	Db 0; завжди 0 
    1387 07B5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1388 07B6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1389 07B8  06C1                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1390 07BA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1391 07BC  00                    1	Db 0; завжди 0 
    1392 07BD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1393 07BE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1394 07C0  06C8                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1395 07C2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1396 07C4  00                    1	Db 0; завжди 0 
    1397 07C5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1398 07C6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1399 07C8  06CF                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1400 07CA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1401 07CC  00                    1	Db 0; завжди 0 
    1402 07CD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1403 07CE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1404 07D0  06D6                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-46


    1405 07D2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1406 07D4  00                    1	Db 0; завжди 0 
    1407 07D5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1408 07D6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1409 07D8  06DD                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1410 07DA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1411 07DC  00                    1	Db 0; завжди 0 
    1412 07DD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1413 07DE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1414 07E0  06E4                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1415 07E2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1416 07E4  00                    1	Db 0; завжди 0 
    1417 07E5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1418 07E6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1419 07E8  06EB                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1420 07EA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1421 07EC  00                    1	Db 0; завжди 0 
    1422 07ED  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1423 07EE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1424 07F0  06F2                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1425 07F2  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1426 07F4  00                    1	Db 0; завжди 0 
    1427 07F5  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1428 07F6  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1429 07F8  06F9                  1	Dw Vector * Proc_int_size; зміщення про
					цедури 
    1430 07FA  0030 R                1	Dw offset deskr_Int_code; селектор деск
					риптора в GDT 
    1431 07FC  00                    1	Db 0; завжди 0 
    1432 07FD  8F                    1	Db 10001111b ;байт атрибутів - шлюз пас
					тки 
    1433 07FE  0000                  1	Dw 0; всі процедури розміщуються в перш
					их 64К 
    1434 0800				IDT	ends 
    1435 0000				.data 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-47


    1436 0000  ????????			Top_real_mode dd ? ;Перед переключенням
					 у захищений режим  потрібно  заборонит
					и переривання 
    1437 0004  00000000			pidt point_dt <> 
    1438 0008  00000000			
    1439				
    1440 000C  00000000			pgdt point_dt <> ;вказівник для GDT (в 
					логічному сегменті даних 
    1441 0010  00000000			
    1442				
    1443 0014  45 72 72 6F 72 21 21	mes1 db 'Error!!!',13,10,'$' 
    1444       21 0D 0A 24		
    1445 001F  30 31 32 33 34 35 36	mess_protect_mode db '0123456' 
    1446 = 009A				code_seg equ 10011010b; не підпорядкова
					ний сегмент кодів, дозволено читати  
    1447 = 0092				data_seg equ 10010010b; сегмент даних, 
					дозволено записувати 
    1448 = 0092				tdata_seg equ 10010010b; тестовий сегме
					нт даних, дозволено читати 
    1449 = 0096				stack_seg equ 10010110b; сегмент стека 
    1450 0026  EA			db 0eah ;машинний код команди jmp 
    1451 0027  00BB R			dw offset protect ;зміщення мітки перех
					оду в сегменті кодів 
    1452 0029  0028 R			dw offset descr_cs ;селектор сегмента к
					одів  
    1453 002B  0028 R			dw offset tdescr_cs ;селектор тестового
					 сегмента даних  
    1454 002D  0000			tempvar dw 0 
    1455 0000				.code			 
    1456 0000				Start:  
    1457 0000  66| 0F 20 C0		mov	eax,cr0 
    1458 0004  A8 01			test al,1 
    1459				;jz MOD_error ; процесор уже в захищено
					му режимі 
    1460				;Крім того, необхідно розблокувати 20-й
					 розряд адрес ПЕОМ 
    1461 0006  E4 92			in al,92h 
    1462 0008  0C 02			or al,2 
    1463 000A  E6 92			out	92h,al 
    1464 000C  B8 ---- R		mov	ax,GDT 
    1465 000F  8E D8			mov ds,ax 
    1466				assume ds:GDT  
    1467				;Формування дескриптора сегмента кодів 
    1468 0011  C7 06 0028 R 002F	mov	descr_cs.limit_1,gdt_size ; роз
					мір сегмента кодів 
    1469				;формування фізичної адреси сегмента ко
					дів 
    1470 0017  66| 33 C0		xor	eax,eax 
    1471 001A  B8 ---- R		mov	ax,@code 
    1472 001D  66| C1 E0 04		shl	eax,4 ;відлуння реального режим
					у від TASM 
    1473 0021  66| A3 002A R		mov	dword ptr descr_cs.base_1,  eax
					 
    1474 0025  C6 06 002D R 9A		mov	descr_cs.attrib,code_seg 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-48


    1475				;дескриптор GDT формується для доступу 
					до GDT системними  
    1476				;програмами в захищеному режимі  
    1477				;--------------------------------------
					------------------ 
    1478 002A  C7 06 0008 R 002F	mov descr_gdt.limit_1,gdt_size 
    1479 0030  66| 33 C0		xor eax,eax 
    1480 0033  B8 ---- R		mov ax,GDT 
    1481 0036  66| C1 E0 04		shl eax,4 
    1482 003A  66| A3 000A R		mov dword ptr descr_gdt.base_1,eax 
    1483 003E  C6 06 000D R 92		mov descr_gdt.attrib,  data_seg 
    1484				;Аналогічно формуються дескриптори сегм
					ентів даних. 
    1485 0043  C7 06 0010 R 002F	mov descr_ds.limit_1,gdt_size 
    1486 0049  66| 33 C0		xor eax,eax 
    1487 004C  B8 ---- R		mov ax,GDT 
    1488 004F  66| C1 E0 04		shl eax,4 
    1489 0053  66| A3 000A R		mov dword ptr descr_gdt.base_1,eax 
    1490 0057  C6 06 000D R 92		mov descr_gdt.attrib,  data_seg 
    1491				;Сегмент стека 
    1492 005C  C7 06 0020 R 000A	mov descr_ss.limit_1,10 
    1493 0062  66| 33 C0		xor eax,eax 
    1494 0065  B8 ---- R		mov ax,ST_p 
    1495 0068  66| C1 E0 04		shl eax,4 
    1496 006C  66| A3 0022 R		mov dword ptr descr_ss.base_1,eax 
    1497 0070  C6 06 0025 R 96		mov descr_ss.attrib,  stack_seg 
    1498				;Відеобуфер 
    1499 0075  C7 06 0018 R FFFF	mov descr_es.limit_1,0ffffh; 
    1500 007B  66| C7 06 001A R 000B8000mov dword ptr descr_es.base_1,0b8000h 
    1501 0084  C6 06 001D R 92		mov descr_es.attrib,data_seg 
    1502				;формування  GDT 
    1503 0089  66| 33 C0		xor eax,eax 
    1504 008C  B8 ---- R		mov ax,GDT 
    1505 008F  66| C1 E0 04		shl eax,4 
    1506 0093  36: 66| A3 0010 R	mov pgdt.adr,eax 
    1507 0098  B8 002F			mov ax,gdt_size 
    1508 009B  36: 66| A3 000C R	mov pgdt.lim,eax 
    1509				;завантаження GDT 
    1510 00A0  36: 0F 01 16 000C R	lgdt pgdt 
    1511				;Переключення  у  захищений  режим  вик
					онується установкою в 1 молодшого біта 
					регістра управління CR0: 
    1512 00A6  FA			Cli 
    1513 00A7  36: 89 26 0000 R		Mov word ptr Top_real_mode,sp 
    1514 00AC  36: 8C 16 0002 R		Mov	word ptr Top_real_mode+2,ss 
    1515 00B1  66| 0F 20 C0		mov eax,cr0 
    1516 00B5  0C 01			or al,1 
    1517 00B7  66| 0F 22 C0		mov cr0,eax 
    1518 00BB				protect: 
    1519				;завантажити селектори для інших дескри
					пторів 
    1520				;припускаємо, що RPL=0 
    1521 00BB  B8 0020 R		mov ax,offset descr_ss 
    1522 00BE  8E D0			mov ss,ax 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-49


    1523 00C0  8B 26 03E8 R		mov sp,Top_stp 
    1524 00C4  B8 0010 R		mov ax,offset descr_ds 
    1525 00C7  8E D8			mov ds,ax 
    1526 00C9  B8 0018 R		mov ax,offset descr_es 
    1527 00CC  8E C0			mov es,ax 
    1528				;Виведення повідомлення на екран 
    1529 00CE  B9 0014			mov cx,20 
    1530 00D1  BE 001F R		mov si,offset mess_protect_mode 
    1531 00D4  BF 0668			mov di,1640 ;початкова адреса виведення
					  
    1532 00D7  B4 07			mov ah,07h ;атрибут символів 
    1533 00D9				outmes: 
    1534 00D9  8A 04			mov al,[si] 
    1535 00DB  26: 89 05		mov es:[di],ax 
    1536 00DE  46			inc si 
    1537 00DF  83 C7 02			add di,2 
    1538 00E2  E2 F5			loop outmes 
    1539				;--------------------------------------
					--------------- 
    1540				;завантаження тестового сегмента даних 
					в регістр es 
    1541 00E4  B8 ---- R		mov	ax,test1 
    1542 00E7  8E C0			mov es,ax 
    1543				assume es:test1  
    1544				;дескриптори тестових сегментів даних. 
    1545 00E9  26: C7 06 0010 R 002F	mov tdescr_ds.tlimit_1,tgdt_size 
    1546 00F0  66| 33 C0		xor eax,eax 
    1547 00F3  B8 ---- R		mov ax,test1 
    1548 00F6  66| C1 E0 04		shl eax,4 
    1549 00FA  26: 66| A3 000A R	mov dword ptr tdescr_gdt.tbase_1,eax 
    1550 00FF  26: C6 06 000D R 92	mov tdescr_gdt.tattrib, tdata_seg 
    1551				;1. Перевірка захисту  від виходу за ме
					жі сегменту даних. 
    1552 0105  BE 01D5			mov si,453[16] 
    1553 0108  26: 83 3E 0010 R 2F	cmp tdescr_ds.tlimit_1,tgdt_size 
    1554 010E  7F FE			jg $ 
    1555				;8. Перевірка захисту від завантаження 
					в сегментний регістр  
    1556				;селектора дескриптора сегмента іншого 
					типу. 
    1557				;9. Перевірка захисту від завантаження 
					в сегментний регістр   
    1558				;селектора неіснуючого або некоректного
					 дескриптора. 
    1559 0110  36: C7 06 002D R 0028	mov tempvar,offset tdescr_cs 
    1560	R			
    1561 0117  36: 81 3E 002D R 0010	cmp tempvar,offset tdescr_ds 
    1562	R			
    1563 011E  0F 85 0128 R		jne esprot ;$ 
    1564 0122  36: A1 002D R		mov ax,tempvar 
    1565 0126  8E C0			mov es,ax 
    1566 0128				esprot: 
    1567				;14. Перевірити запис 1 в біт A 
    1568 0128  36: 8B 0E 002D R		mov cx,tempvar 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-50


    1569 012D  26: 80 3E 000D R 93	cmp tdescr_gdt.tattrib,10010011b 
    1570 0133  0F 84 0137 R		je return_dos;$ 
    1571				;=========================== 
    1572				;повернення в реальний режим 
    1573 0137				return_dos: 
    1574				assume ds:GDT;  
    1575 0137  FA			cli 
    1576 0138  B8 0008 R		mov ax, offset descr_GDT 
    1577				; в режимі реальних адрес в цьому випад
					ку виконували команду mov ax,GDT 
    1578 013B  8E D8			mov ds,ax 
    1579 013D  C7 06 0028 R FFFF	mov descr_cs.limit_1,0ffffh 
    1580 0143  C7 06 0010 R FFFF	mov descr_ds.limit_1,0ffffh 
    1581 0149  C6 06 0025 R 92		mov descr_ss. attrib,   data_seg 
    1582				; перезавантаження тіньових регістрів 
    1583 014E  B8 0010 R		mov ax,offset descr_ds 
    1584 0151  8E D8			mov ds,ax 
    1585 0153  B8 0018 R		mov ax,offset descr_es 
    1586 0156  8E C0			mov es,ax 
    1587 0158  B8 0020 R		mov ax,offset descr_ss 
    1588 015B  8E D0			mov ss,ax 
    1589 015D  EA			db 0eah 
    1590 015E  0162 R			dw offset jumpt 
    1591 0160  0028 R			dw offset descr_cs 
    1592 0162				jumpt: 
    1593				;переключення в режим реальних адрес 
    1594 0162  66| 0F 20 C0		mov eax,cr0 
    1595 0166  24 FE			and al,0feh 
    1596 0168  66| 0F 22 C0		mov cr0,eax 
    1597 016C  EA			db 0eah 
    1598 016D  016F R			dw offset r_mode 
    1599				;dw _CODE 
    1600 016F				r_mode: 
    1601				assume ds:_DATA 
    1602 016F  B8 ---- R		mov ax,_data 
    1603 0172  8E D8			mov ds,ax 
    1604 0174  0F B2 26 0000 R		lss sp,Top_real_mode 
    1605 0179  FB			sti 
    1606 017A  B4 01			mov ah,01h 
    1607 017C  CD 21			int 21h ;чекать введення з клавіатури  
    1608 017E  B8 0003			mov ax,3 
    1609 0181  CD 10			int 10h ; переключить відеоконтролер 
    1610				;закінчення роботи програми (стандартно
					) 
    1611 0183  B8 4C00			mov ax,4c00h 
    1612 0186  CD 21			int 21h 
    1613 0000				Int_code segment	para public 'co
					de' use16 
    1614				Assume cs:Int_code 
    1615 = 0000				Vector=0 
    1616 0000				I_beg: 
    1617 0000  60			Pusha 
    1618 0001  B8 0000			Mov ax,vector 
    1619 0004  E9 070A R		Jmp common_int 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-51


    1620 0007				I_end: 
    1621 = 0007				Proc_int_size = I_end-I_beg 
    1622				; Процедура обробки 0-го переривання ви
					ділена виключно 
    1623				; для автоматичного визначення її розмі
					ру (Proc_int_size) 
    1624 = 0001				Vector=1 
    1625				Rept 255 
    1626				pusha 
    1627				Mov	ax,vector 
    1628				Jmp	common_int 
    1629				Vector = Vector + 1 
    1630				Endm 
    1631 0007  60                    1	pusha 
    1632 0008  B8 0001               1	Mov	ax,vector 
    1633 000B  E9 070A R             1	Jmp	common_int 
    1634 000E  60                    1	pusha 
    1635 000F  B8 0002               1	Mov	ax,vector 
    1636 0012  E9 070A R             1	Jmp	common_int 
    1637 0015  60                    1	pusha 
    1638 0016  B8 0003               1	Mov	ax,vector 
    1639 0019  E9 070A R             1	Jmp	common_int 
    1640 001C  60                    1	pusha 
    1641 001D  B8 0004               1	Mov	ax,vector 
    1642 0020  E9 070A R             1	Jmp	common_int 
    1643 0023  60                    1	pusha 
    1644 0024  B8 0005               1	Mov	ax,vector 
    1645 0027  E9 070A R             1	Jmp	common_int 
    1646 002A  60                    1	pusha 
    1647 002B  B8 0006               1	Mov	ax,vector 
    1648 002E  E9 070A R             1	Jmp	common_int 
    1649 0031  60                    1	pusha 
    1650 0032  B8 0007               1	Mov	ax,vector 
    1651 0035  E9 070A R             1	Jmp	common_int 
    1652 0038  60                    1	pusha 
    1653 0039  B8 0008               1	Mov	ax,vector 
    1654 003C  E9 070A R             1	Jmp	common_int 
    1655 003F  60                    1	pusha 
    1656 0040  B8 0009               1	Mov	ax,vector 
    1657 0043  E9 070A R             1	Jmp	common_int 
    1658 0046  60                    1	pusha 
    1659 0047  B8 000A               1	Mov	ax,vector 
    1660 004A  E9 070A R             1	Jmp	common_int 
    1661 004D  60                    1	pusha 
    1662 004E  B8 000B               1	Mov	ax,vector 
    1663 0051  E9 070A R             1	Jmp	common_int 
    1664 0054  60                    1	pusha 
    1665 0055  B8 000C               1	Mov	ax,vector 
    1666 0058  E9 070A R             1	Jmp	common_int 
    1667 005B  60                    1	pusha 
    1668 005C  B8 000D               1	Mov	ax,vector 
    1669 005F  E9 070A R             1	Jmp	common_int 
    1670 0062  60                    1	pusha 
    1671 0063  B8 000E               1	Mov	ax,vector 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-52


    1672 0066  E9 070A R             1	Jmp	common_int 
    1673 0069  60                    1	pusha 
    1674 006A  B8 000F               1	Mov	ax,vector 
    1675 006D  E9 070A R             1	Jmp	common_int 
    1676 0070  60                    1	pusha 
    1677 0071  B8 0010               1	Mov	ax,vector 
    1678 0074  E9 070A R             1	Jmp	common_int 
    1679 0077  60                    1	pusha 
    1680 0078  B8 0011               1	Mov	ax,vector 
    1681 007B  E9 070A R             1	Jmp	common_int 
    1682 007E  60                    1	pusha 
    1683 007F  B8 0012               1	Mov	ax,vector 
    1684 0082  E9 070A R             1	Jmp	common_int 
    1685 0085  60                    1	pusha 
    1686 0086  B8 0013               1	Mov	ax,vector 
    1687 0089  E9 070A R             1	Jmp	common_int 
    1688 008C  60                    1	pusha 
    1689 008D  B8 0014               1	Mov	ax,vector 
    1690 0090  E9 070A R             1	Jmp	common_int 
    1691 0093  60                    1	pusha 
    1692 0094  B8 0015               1	Mov	ax,vector 
    1693 0097  E9 070A R             1	Jmp	common_int 
    1694 009A  60                    1	pusha 
    1695 009B  B8 0016               1	Mov	ax,vector 
    1696 009E  E9 070A R             1	Jmp	common_int 
    1697 00A1  60                    1	pusha 
    1698 00A2  B8 0017               1	Mov	ax,vector 
    1699 00A5  E9 070A R             1	Jmp	common_int 
    1700 00A8  60                    1	pusha 
    1701 00A9  B8 0018               1	Mov	ax,vector 
    1702 00AC  E9 070A R             1	Jmp	common_int 
    1703 00AF  60                    1	pusha 
    1704 00B0  B8 0019               1	Mov	ax,vector 
    1705 00B3  E9 070A R             1	Jmp	common_int 
    1706 00B6  60                    1	pusha 
    1707 00B7  B8 001A               1	Mov	ax,vector 
    1708 00BA  E9 070A R             1	Jmp	common_int 
    1709 00BD  60                    1	pusha 
    1710 00BE  B8 001B               1	Mov	ax,vector 
    1711 00C1  E9 070A R             1	Jmp	common_int 
    1712 00C4  60                    1	pusha 
    1713 00C5  B8 001C               1	Mov	ax,vector 
    1714 00C8  E9 070A R             1	Jmp	common_int 
    1715 00CB  60                    1	pusha 
    1716 00CC  B8 001D               1	Mov	ax,vector 
    1717 00CF  E9 070A R             1	Jmp	common_int 
    1718 00D2  60                    1	pusha 
    1719 00D3  B8 001E               1	Mov	ax,vector 
    1720 00D6  E9 070A R             1	Jmp	common_int 
    1721 00D9  60                    1	pusha 
    1722 00DA  B8 001F               1	Mov	ax,vector 
    1723 00DD  E9 070A R             1	Jmp	common_int 
    1724 00E0  60                    1	pusha 
    1725 00E1  B8 0020               1	Mov	ax,vector 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-53


    1726 00E4  E9 070A R             1	Jmp	common_int 
    1727 00E7  60                    1	pusha 
    1728 00E8  B8 0021               1	Mov	ax,vector 
    1729 00EB  E9 070A R             1	Jmp	common_int 
    1730 00EE  60                    1	pusha 
    1731 00EF  B8 0022               1	Mov	ax,vector 
    1732 00F2  E9 070A R             1	Jmp	common_int 
    1733 00F5  60                    1	pusha 
    1734 00F6  B8 0023               1	Mov	ax,vector 
    1735 00F9  E9 070A R             1	Jmp	common_int 
    1736 00FC  60                    1	pusha 
    1737 00FD  B8 0024               1	Mov	ax,vector 
    1738 0100  E9 070A R             1	Jmp	common_int 
    1739 0103  60                    1	pusha 
    1740 0104  B8 0025               1	Mov	ax,vector 
    1741 0107  E9 070A R             1	Jmp	common_int 
    1742 010A  60                    1	pusha 
    1743 010B  B8 0026               1	Mov	ax,vector 
    1744 010E  E9 070A R             1	Jmp	common_int 
    1745 0111  60                    1	pusha 
    1746 0112  B8 0027               1	Mov	ax,vector 
    1747 0115  E9 070A R             1	Jmp	common_int 
    1748 0118  60                    1	pusha 
    1749 0119  B8 0028               1	Mov	ax,vector 
    1750 011C  E9 070A R             1	Jmp	common_int 
    1751 011F  60                    1	pusha 
    1752 0120  B8 0029               1	Mov	ax,vector 
    1753 0123  E9 070A R             1	Jmp	common_int 
    1754 0126  60                    1	pusha 
    1755 0127  B8 002A               1	Mov	ax,vector 
    1756 012A  E9 070A R             1	Jmp	common_int 
    1757 012D  60                    1	pusha 
    1758 012E  B8 002B               1	Mov	ax,vector 
    1759 0131  E9 070A R             1	Jmp	common_int 
    1760 0134  60                    1	pusha 
    1761 0135  B8 002C               1	Mov	ax,vector 
    1762 0138  E9 070A R             1	Jmp	common_int 
    1763 013B  60                    1	pusha 
    1764 013C  B8 002D               1	Mov	ax,vector 
    1765 013F  E9 070A R             1	Jmp	common_int 
    1766 0142  60                    1	pusha 
    1767 0143  B8 002E               1	Mov	ax,vector 
    1768 0146  E9 070A R             1	Jmp	common_int 
    1769 0149  60                    1	pusha 
    1770 014A  B8 002F               1	Mov	ax,vector 
    1771 014D  E9 070A R             1	Jmp	common_int 
    1772 0150  60                    1	pusha 
    1773 0151  B8 0030               1	Mov	ax,vector 
    1774 0154  E9 070A R             1	Jmp	common_int 
    1775 0157  60                    1	pusha 
    1776 0158  B8 0031               1	Mov	ax,vector 
    1777 015B  E9 070A R             1	Jmp	common_int 
    1778 015E  60                    1	pusha 
    1779 015F  B8 0032               1	Mov	ax,vector 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-54


    1780 0162  E9 070A R             1	Jmp	common_int 
    1781 0165  60                    1	pusha 
    1782 0166  B8 0033               1	Mov	ax,vector 
    1783 0169  E9 070A R             1	Jmp	common_int 
    1784 016C  60                    1	pusha 
    1785 016D  B8 0034               1	Mov	ax,vector 
    1786 0170  E9 070A R             1	Jmp	common_int 
    1787 0173  60                    1	pusha 
    1788 0174  B8 0035               1	Mov	ax,vector 
    1789 0177  E9 070A R             1	Jmp	common_int 
    1790 017A  60                    1	pusha 
    1791 017B  B8 0036               1	Mov	ax,vector 
    1792 017E  E9 070A R             1	Jmp	common_int 
    1793 0181  60                    1	pusha 
    1794 0182  B8 0037               1	Mov	ax,vector 
    1795 0185  E9 070A R             1	Jmp	common_int 
    1796 0188  60                    1	pusha 
    1797 0189  B8 0038               1	Mov	ax,vector 
    1798 018C  E9 070A R             1	Jmp	common_int 
    1799 018F  60                    1	pusha 
    1800 0190  B8 0039               1	Mov	ax,vector 
    1801 0193  E9 070A R             1	Jmp	common_int 
    1802 0196  60                    1	pusha 
    1803 0197  B8 003A               1	Mov	ax,vector 
    1804 019A  E9 070A R             1	Jmp	common_int 
    1805 019D  60                    1	pusha 
    1806 019E  B8 003B               1	Mov	ax,vector 
    1807 01A1  E9 070A R             1	Jmp	common_int 
    1808 01A4  60                    1	pusha 
    1809 01A5  B8 003C               1	Mov	ax,vector 
    1810 01A8  E9 070A R             1	Jmp	common_int 
    1811 01AB  60                    1	pusha 
    1812 01AC  B8 003D               1	Mov	ax,vector 
    1813 01AF  E9 070A R             1	Jmp	common_int 
    1814 01B2  60                    1	pusha 
    1815 01B3  B8 003E               1	Mov	ax,vector 
    1816 01B6  E9 070A R             1	Jmp	common_int 
    1817 01B9  60                    1	pusha 
    1818 01BA  B8 003F               1	Mov	ax,vector 
    1819 01BD  E9 070A R             1	Jmp	common_int 
    1820 01C0  60                    1	pusha 
    1821 01C1  B8 0040               1	Mov	ax,vector 
    1822 01C4  E9 070A R             1	Jmp	common_int 
    1823 01C7  60                    1	pusha 
    1824 01C8  B8 0041               1	Mov	ax,vector 
    1825 01CB  E9 070A R             1	Jmp	common_int 
    1826 01CE  60                    1	pusha 
    1827 01CF  B8 0042               1	Mov	ax,vector 
    1828 01D2  E9 070A R             1	Jmp	common_int 
    1829 01D5  60                    1	pusha 
    1830 01D6  B8 0043               1	Mov	ax,vector 
    1831 01D9  E9 070A R             1	Jmp	common_int 
    1832 01DC  60                    1	pusha 
    1833 01DD  B8 0044               1	Mov	ax,vector 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-55


    1834 01E0  E9 070A R             1	Jmp	common_int 
    1835 01E3  60                    1	pusha 
    1836 01E4  B8 0045               1	Mov	ax,vector 
    1837 01E7  E9 070A R             1	Jmp	common_int 
    1838 01EA  60                    1	pusha 
    1839 01EB  B8 0046               1	Mov	ax,vector 
    1840 01EE  E9 070A R             1	Jmp	common_int 
    1841 01F1  60                    1	pusha 
    1842 01F2  B8 0047               1	Mov	ax,vector 
    1843 01F5  E9 070A R             1	Jmp	common_int 
    1844 01F8  60                    1	pusha 
    1845 01F9  B8 0048               1	Mov	ax,vector 
    1846 01FC  E9 070A R             1	Jmp	common_int 
    1847 01FF  60                    1	pusha 
    1848 0200  B8 0049               1	Mov	ax,vector 
    1849 0203  E9 070A R             1	Jmp	common_int 
    1850 0206  60                    1	pusha 
    1851 0207  B8 004A               1	Mov	ax,vector 
    1852 020A  E9 070A R             1	Jmp	common_int 
    1853 020D  60                    1	pusha 
    1854 020E  B8 004B               1	Mov	ax,vector 
    1855 0211  E9 070A R             1	Jmp	common_int 
    1856 0214  60                    1	pusha 
    1857 0215  B8 004C               1	Mov	ax,vector 
    1858 0218  E9 070A R             1	Jmp	common_int 
    1859 021B  60                    1	pusha 
    1860 021C  B8 004D               1	Mov	ax,vector 
    1861 021F  E9 070A R             1	Jmp	common_int 
    1862 0222  60                    1	pusha 
    1863 0223  B8 004E               1	Mov	ax,vector 
    1864 0226  E9 070A R             1	Jmp	common_int 
    1865 0229  60                    1	pusha 
    1866 022A  B8 004F               1	Mov	ax,vector 
    1867 022D  E9 070A R             1	Jmp	common_int 
    1868 0230  60                    1	pusha 
    1869 0231  B8 0050               1	Mov	ax,vector 
    1870 0234  E9 070A R             1	Jmp	common_int 
    1871 0237  60                    1	pusha 
    1872 0238  B8 0051               1	Mov	ax,vector 
    1873 023B  E9 070A R             1	Jmp	common_int 
    1874 023E  60                    1	pusha 
    1875 023F  B8 0052               1	Mov	ax,vector 
    1876 0242  E9 070A R             1	Jmp	common_int 
    1877 0245  60                    1	pusha 
    1878 0246  B8 0053               1	Mov	ax,vector 
    1879 0249  E9 070A R             1	Jmp	common_int 
    1880 024C  60                    1	pusha 
    1881 024D  B8 0054               1	Mov	ax,vector 
    1882 0250  E9 070A R             1	Jmp	common_int 
    1883 0253  60                    1	pusha 
    1884 0254  B8 0055               1	Mov	ax,vector 
    1885 0257  E9 070A R             1	Jmp	common_int 
    1886 025A  60                    1	pusha 
    1887 025B  B8 0056               1	Mov	ax,vector 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-56


    1888 025E  E9 070A R             1	Jmp	common_int 
    1889 0261  60                    1	pusha 
    1890 0262  B8 0057               1	Mov	ax,vector 
    1891 0265  E9 070A R             1	Jmp	common_int 
    1892 0268  60                    1	pusha 
    1893 0269  B8 0058               1	Mov	ax,vector 
    1894 026C  E9 070A R             1	Jmp	common_int 
    1895 026F  60                    1	pusha 
    1896 0270  B8 0059               1	Mov	ax,vector 
    1897 0273  E9 070A R             1	Jmp	common_int 
    1898 0276  60                    1	pusha 
    1899 0277  B8 005A               1	Mov	ax,vector 
    1900 027A  E9 070A R             1	Jmp	common_int 
    1901 027D  60                    1	pusha 
    1902 027E  B8 005B               1	Mov	ax,vector 
    1903 0281  E9 070A R             1	Jmp	common_int 
    1904 0284  60                    1	pusha 
    1905 0285  B8 005C               1	Mov	ax,vector 
    1906 0288  E9 070A R             1	Jmp	common_int 
    1907 028B  60                    1	pusha 
    1908 028C  B8 005D               1	Mov	ax,vector 
    1909 028F  E9 070A R             1	Jmp	common_int 
    1910 0292  60                    1	pusha 
    1911 0293  B8 005E               1	Mov	ax,vector 
    1912 0296  E9 070A R             1	Jmp	common_int 
    1913 0299  60                    1	pusha 
    1914 029A  B8 005F               1	Mov	ax,vector 
    1915 029D  E9 070A R             1	Jmp	common_int 
    1916 02A0  60                    1	pusha 
    1917 02A1  B8 0060               1	Mov	ax,vector 
    1918 02A4  E9 070A R             1	Jmp	common_int 
    1919 02A7  60                    1	pusha 
    1920 02A8  B8 0061               1	Mov	ax,vector 
    1921 02AB  E9 070A R             1	Jmp	common_int 
    1922 02AE  60                    1	pusha 
    1923 02AF  B8 0062               1	Mov	ax,vector 
    1924 02B2  E9 070A R             1	Jmp	common_int 
    1925 02B5  60                    1	pusha 
    1926 02B6  B8 0063               1	Mov	ax,vector 
    1927 02B9  E9 070A R             1	Jmp	common_int 
    1928 02BC  60                    1	pusha 
    1929 02BD  B8 0064               1	Mov	ax,vector 
    1930 02C0  E9 070A R             1	Jmp	common_int 
    1931 02C3  60                    1	pusha 
    1932 02C4  B8 0065               1	Mov	ax,vector 
    1933 02C7  E9 070A R             1	Jmp	common_int 
    1934 02CA  60                    1	pusha 
    1935 02CB  B8 0066               1	Mov	ax,vector 
    1936 02CE  E9 070A R             1	Jmp	common_int 
    1937 02D1  60                    1	pusha 
    1938 02D2  B8 0067               1	Mov	ax,vector 
    1939 02D5  E9 070A R             1	Jmp	common_int 
    1940 02D8  60                    1	pusha 
    1941 02D9  B8 0068               1	Mov	ax,vector 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-57


    1942 02DC  E9 070A R             1	Jmp	common_int 
    1943 02DF  60                    1	pusha 
    1944 02E0  B8 0069               1	Mov	ax,vector 
    1945 02E3  E9 070A R             1	Jmp	common_int 
    1946 02E6  60                    1	pusha 
    1947 02E7  B8 006A               1	Mov	ax,vector 
    1948 02EA  E9 070A R             1	Jmp	common_int 
    1949 02ED  60                    1	pusha 
    1950 02EE  B8 006B               1	Mov	ax,vector 
    1951 02F1  E9 070A R             1	Jmp	common_int 
    1952 02F4  60                    1	pusha 
    1953 02F5  B8 006C               1	Mov	ax,vector 
    1954 02F8  E9 070A R             1	Jmp	common_int 
    1955 02FB  60                    1	pusha 
    1956 02FC  B8 006D               1	Mov	ax,vector 
    1957 02FF  E9 070A R             1	Jmp	common_int 
    1958 0302  60                    1	pusha 
    1959 0303  B8 006E               1	Mov	ax,vector 
    1960 0306  E9 070A R             1	Jmp	common_int 
    1961 0309  60                    1	pusha 
    1962 030A  B8 006F               1	Mov	ax,vector 
    1963 030D  E9 070A R             1	Jmp	common_int 
    1964 0310  60                    1	pusha 
    1965 0311  B8 0070               1	Mov	ax,vector 
    1966 0314  E9 070A R             1	Jmp	common_int 
    1967 0317  60                    1	pusha 
    1968 0318  B8 0071               1	Mov	ax,vector 
    1969 031B  E9 070A R             1	Jmp	common_int 
    1970 031E  60                    1	pusha 
    1971 031F  B8 0072               1	Mov	ax,vector 
    1972 0322  E9 070A R             1	Jmp	common_int 
    1973 0325  60                    1	pusha 
    1974 0326  B8 0073               1	Mov	ax,vector 
    1975 0329  E9 070A R             1	Jmp	common_int 
    1976 032C  60                    1	pusha 
    1977 032D  B8 0074               1	Mov	ax,vector 
    1978 0330  E9 070A R             1	Jmp	common_int 
    1979 0333  60                    1	pusha 
    1980 0334  B8 0075               1	Mov	ax,vector 
    1981 0337  E9 070A R             1	Jmp	common_int 
    1982 033A  60                    1	pusha 
    1983 033B  B8 0076               1	Mov	ax,vector 
    1984 033E  E9 070A R             1	Jmp	common_int 
    1985 0341  60                    1	pusha 
    1986 0342  B8 0077               1	Mov	ax,vector 
    1987 0345  E9 070A R             1	Jmp	common_int 
    1988 0348  60                    1	pusha 
    1989 0349  B8 0078               1	Mov	ax,vector 
    1990 034C  E9 070A R             1	Jmp	common_int 
    1991 034F  60                    1	pusha 
    1992 0350  B8 0079               1	Mov	ax,vector 
    1993 0353  E9 070A R             1	Jmp	common_int 
    1994 0356  60                    1	pusha 
    1995 0357  B8 007A               1	Mov	ax,vector 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-58


    1996 035A  E9 070A R             1	Jmp	common_int 
    1997 035D  60                    1	pusha 
    1998 035E  B8 007B               1	Mov	ax,vector 
    1999 0361  E9 070A R             1	Jmp	common_int 
    2000 0364  60                    1	pusha 
    2001 0365  B8 007C               1	Mov	ax,vector 
    2002 0368  E9 070A R             1	Jmp	common_int 
    2003 036B  60                    1	pusha 
    2004 036C  B8 007D               1	Mov	ax,vector 
    2005 036F  E9 070A R             1	Jmp	common_int 
    2006 0372  60                    1	pusha 
    2007 0373  B8 007E               1	Mov	ax,vector 
    2008 0376  E9 070A R             1	Jmp	common_int 
    2009 0379  60                    1	pusha 
    2010 037A  B8 007F               1	Mov	ax,vector 
    2011 037D  E9 070A R             1	Jmp	common_int 
    2012 0380  60                    1	pusha 
    2013 0381  B8 0080               1	Mov	ax,vector 
    2014 0384  E9 070A R             1	Jmp	common_int 
    2015 0387  60                    1	pusha 
    2016 0388  B8 0081               1	Mov	ax,vector 
    2017 038B  E9 070A R             1	Jmp	common_int 
    2018 038E  60                    1	pusha 
    2019 038F  B8 0082               1	Mov	ax,vector 
    2020 0392  E9 070A R             1	Jmp	common_int 
    2021 0395  60                    1	pusha 
    2022 0396  B8 0083               1	Mov	ax,vector 
    2023 0399  E9 070A R             1	Jmp	common_int 
    2024 039C  60                    1	pusha 
    2025 039D  B8 0084               1	Mov	ax,vector 
    2026 03A0  E9 070A R             1	Jmp	common_int 
    2027 03A3  60                    1	pusha 
    2028 03A4  B8 0085               1	Mov	ax,vector 
    2029 03A7  E9 070A R             1	Jmp	common_int 
    2030 03AA  60                    1	pusha 
    2031 03AB  B8 0086               1	Mov	ax,vector 
    2032 03AE  E9 070A R             1	Jmp	common_int 
    2033 03B1  60                    1	pusha 
    2034 03B2  B8 0087               1	Mov	ax,vector 
    2035 03B5  E9 070A R             1	Jmp	common_int 
    2036 03B8  60                    1	pusha 
    2037 03B9  B8 0088               1	Mov	ax,vector 
    2038 03BC  E9 070A R             1	Jmp	common_int 
    2039 03BF  60                    1	pusha 
    2040 03C0  B8 0089               1	Mov	ax,vector 
    2041 03C3  E9 070A R             1	Jmp	common_int 
    2042 03C6  60                    1	pusha 
    2043 03C7  B8 008A               1	Mov	ax,vector 
    2044 03CA  E9 070A R             1	Jmp	common_int 
    2045 03CD  60                    1	pusha 
    2046 03CE  B8 008B               1	Mov	ax,vector 
    2047 03D1  E9 070A R             1	Jmp	common_int 
    2048 03D4  60                    1	pusha 
    2049 03D5  B8 008C               1	Mov	ax,vector 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-59


    2050 03D8  E9 070A R             1	Jmp	common_int 
    2051 03DB  60                    1	pusha 
    2052 03DC  B8 008D               1	Mov	ax,vector 
    2053 03DF  E9 070A R             1	Jmp	common_int 
    2054 03E2  60                    1	pusha 
    2055 03E3  B8 008E               1	Mov	ax,vector 
    2056 03E6  E9 070A R             1	Jmp	common_int 
    2057 03E9  60                    1	pusha 
    2058 03EA  B8 008F               1	Mov	ax,vector 
    2059 03ED  E9 070A R             1	Jmp	common_int 
    2060 03F0  60                    1	pusha 
    2061 03F1  B8 0090               1	Mov	ax,vector 
    2062 03F4  E9 070A R             1	Jmp	common_int 
    2063 03F7  60                    1	pusha 
    2064 03F8  B8 0091               1	Mov	ax,vector 
    2065 03FB  E9 070A R             1	Jmp	common_int 
    2066 03FE  60                    1	pusha 
    2067 03FF  B8 0092               1	Mov	ax,vector 
    2068 0402  E9 070A R             1	Jmp	common_int 
    2069 0405  60                    1	pusha 
    2070 0406  B8 0093               1	Mov	ax,vector 
    2071 0409  E9 070A R             1	Jmp	common_int 
    2072 040C  60                    1	pusha 
    2073 040D  B8 0094               1	Mov	ax,vector 
    2074 0410  E9 070A R             1	Jmp	common_int 
    2075 0413  60                    1	pusha 
    2076 0414  B8 0095               1	Mov	ax,vector 
    2077 0417  E9 070A R             1	Jmp	common_int 
    2078 041A  60                    1	pusha 
    2079 041B  B8 0096               1	Mov	ax,vector 
    2080 041E  E9 070A R             1	Jmp	common_int 
    2081 0421  60                    1	pusha 
    2082 0422  B8 0097               1	Mov	ax,vector 
    2083 0425  E9 070A R             1	Jmp	common_int 
    2084 0428  60                    1	pusha 
    2085 0429  B8 0098               1	Mov	ax,vector 
    2086 042C  E9 070A R             1	Jmp	common_int 
    2087 042F  60                    1	pusha 
    2088 0430  B8 0099               1	Mov	ax,vector 
    2089 0433  E9 070A R             1	Jmp	common_int 
    2090 0436  60                    1	pusha 
    2091 0437  B8 009A               1	Mov	ax,vector 
    2092 043A  E9 070A R             1	Jmp	common_int 
    2093 043D  60                    1	pusha 
    2094 043E  B8 009B               1	Mov	ax,vector 
    2095 0441  E9 070A R             1	Jmp	common_int 
    2096 0444  60                    1	pusha 
    2097 0445  B8 009C               1	Mov	ax,vector 
    2098 0448  E9 070A R             1	Jmp	common_int 
    2099 044B  60                    1	pusha 
    2100 044C  B8 009D               1	Mov	ax,vector 
    2101 044F  E9 070A R             1	Jmp	common_int 
    2102 0452  60                    1	pusha 
    2103 0453  B8 009E               1	Mov	ax,vector 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-60


    2104 0456  E9 070A R             1	Jmp	common_int 
    2105 0459  60                    1	pusha 
    2106 045A  B8 009F               1	Mov	ax,vector 
    2107 045D  E9 070A R             1	Jmp	common_int 
    2108 0460  60                    1	pusha 
    2109 0461  B8 00A0               1	Mov	ax,vector 
    2110 0464  E9 070A R             1	Jmp	common_int 
    2111 0467  60                    1	pusha 
    2112 0468  B8 00A1               1	Mov	ax,vector 
    2113 046B  E9 070A R             1	Jmp	common_int 
    2114 046E  60                    1	pusha 
    2115 046F  B8 00A2               1	Mov	ax,vector 
    2116 0472  E9 070A R             1	Jmp	common_int 
    2117 0475  60                    1	pusha 
    2118 0476  B8 00A3               1	Mov	ax,vector 
    2119 0479  E9 070A R             1	Jmp	common_int 
    2120 047C  60                    1	pusha 
    2121 047D  B8 00A4               1	Mov	ax,vector 
    2122 0480  E9 070A R             1	Jmp	common_int 
    2123 0483  60                    1	pusha 
    2124 0484  B8 00A5               1	Mov	ax,vector 
    2125 0487  E9 070A R             1	Jmp	common_int 
    2126 048A  60                    1	pusha 
    2127 048B  B8 00A6               1	Mov	ax,vector 
    2128 048E  E9 070A R             1	Jmp	common_int 
    2129 0491  60                    1	pusha 
    2130 0492  B8 00A7               1	Mov	ax,vector 
    2131 0495  E9 070A R             1	Jmp	common_int 
    2132 0498  60                    1	pusha 
    2133 0499  B8 00A8               1	Mov	ax,vector 
    2134 049C  E9 070A R             1	Jmp	common_int 
    2135 049F  60                    1	pusha 
    2136 04A0  B8 00A9               1	Mov	ax,vector 
    2137 04A3  E9 070A R             1	Jmp	common_int 
    2138 04A6  60                    1	pusha 
    2139 04A7  B8 00AA               1	Mov	ax,vector 
    2140 04AA  E9 070A R             1	Jmp	common_int 
    2141 04AD  60                    1	pusha 
    2142 04AE  B8 00AB               1	Mov	ax,vector 
    2143 04B1  E9 070A R             1	Jmp	common_int 
    2144 04B4  60                    1	pusha 
    2145 04B5  B8 00AC               1	Mov	ax,vector 
    2146 04B8  E9 070A R             1	Jmp	common_int 
    2147 04BB  60                    1	pusha 
    2148 04BC  B8 00AD               1	Mov	ax,vector 
    2149 04BF  E9 070A R             1	Jmp	common_int 
    2150 04C2  60                    1	pusha 
    2151 04C3  B8 00AE               1	Mov	ax,vector 
    2152 04C6  E9 070A R             1	Jmp	common_int 
    2153 04C9  60                    1	pusha 
    2154 04CA  B8 00AF               1	Mov	ax,vector 
    2155 04CD  E9 070A R             1	Jmp	common_int 
    2156 04D0  60                    1	pusha 
    2157 04D1  B8 00B0               1	Mov	ax,vector 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-61


    2158 04D4  E9 070A R             1	Jmp	common_int 
    2159 04D7  60                    1	pusha 
    2160 04D8  B8 00B1               1	Mov	ax,vector 
    2161 04DB  E9 070A R             1	Jmp	common_int 
    2162 04DE  60                    1	pusha 
    2163 04DF  B8 00B2               1	Mov	ax,vector 
    2164 04E2  E9 070A R             1	Jmp	common_int 
    2165 04E5  60                    1	pusha 
    2166 04E6  B8 00B3               1	Mov	ax,vector 
    2167 04E9  E9 070A R             1	Jmp	common_int 
    2168 04EC  60                    1	pusha 
    2169 04ED  B8 00B4               1	Mov	ax,vector 
    2170 04F0  E9 070A R             1	Jmp	common_int 
    2171 04F3  60                    1	pusha 
    2172 04F4  B8 00B5               1	Mov	ax,vector 
    2173 04F7  E9 070A R             1	Jmp	common_int 
    2174 04FA  60                    1	pusha 
    2175 04FB  B8 00B6               1	Mov	ax,vector 
    2176 04FE  E9 070A R             1	Jmp	common_int 
    2177 0501  60                    1	pusha 
    2178 0502  B8 00B7               1	Mov	ax,vector 
    2179 0505  E9 070A R             1	Jmp	common_int 
    2180 0508  60                    1	pusha 
    2181 0509  B8 00B8               1	Mov	ax,vector 
    2182 050C  E9 070A R             1	Jmp	common_int 
    2183 050F  60                    1	pusha 
    2184 0510  B8 00B9               1	Mov	ax,vector 
    2185 0513  E9 070A R             1	Jmp	common_int 
    2186 0516  60                    1	pusha 
    2187 0517  B8 00BA               1	Mov	ax,vector 
    2188 051A  E9 070A R             1	Jmp	common_int 
    2189 051D  60                    1	pusha 
    2190 051E  B8 00BB               1	Mov	ax,vector 
    2191 0521  E9 070A R             1	Jmp	common_int 
    2192 0524  60                    1	pusha 
    2193 0525  B8 00BC               1	Mov	ax,vector 
    2194 0528  E9 070A R             1	Jmp	common_int 
    2195 052B  60                    1	pusha 
    2196 052C  B8 00BD               1	Mov	ax,vector 
    2197 052F  E9 070A R             1	Jmp	common_int 
    2198 0532  60                    1	pusha 
    2199 0533  B8 00BE               1	Mov	ax,vector 
    2200 0536  E9 070A R             1	Jmp	common_int 
    2201 0539  60                    1	pusha 
    2202 053A  B8 00BF               1	Mov	ax,vector 
    2203 053D  E9 070A R             1	Jmp	common_int 
    2204 0540  60                    1	pusha 
    2205 0541  B8 00C0               1	Mov	ax,vector 
    2206 0544  E9 070A R             1	Jmp	common_int 
    2207 0547  60                    1	pusha 
    2208 0548  B8 00C1               1	Mov	ax,vector 
    2209 054B  E9 070A R             1	Jmp	common_int 
    2210 054E  60                    1	pusha 
    2211 054F  B8 00C2               1	Mov	ax,vector 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-62


    2212 0552  E9 070A R             1	Jmp	common_int 
    2213 0555  60                    1	pusha 
    2214 0556  B8 00C3               1	Mov	ax,vector 
    2215 0559  E9 070A R             1	Jmp	common_int 
    2216 055C  60                    1	pusha 
    2217 055D  B8 00C4               1	Mov	ax,vector 
    2218 0560  E9 070A R             1	Jmp	common_int 
    2219 0563  60                    1	pusha 
    2220 0564  B8 00C5               1	Mov	ax,vector 
    2221 0567  E9 070A R             1	Jmp	common_int 
    2222 056A  60                    1	pusha 
    2223 056B  B8 00C6               1	Mov	ax,vector 
    2224 056E  E9 070A R             1	Jmp	common_int 
    2225 0571  60                    1	pusha 
    2226 0572  B8 00C7               1	Mov	ax,vector 
    2227 0575  E9 070A R             1	Jmp	common_int 
    2228 0578  60                    1	pusha 
    2229 0579  B8 00C8               1	Mov	ax,vector 
    2230 057C  E9 070A R             1	Jmp	common_int 
    2231 057F  60                    1	pusha 
    2232 0580  B8 00C9               1	Mov	ax,vector 
    2233 0583  E9 070A R             1	Jmp	common_int 
    2234 0586  60                    1	pusha 
    2235 0587  B8 00CA               1	Mov	ax,vector 
    2236 058A  E9 070A R             1	Jmp	common_int 
    2237 058D  60                    1	pusha 
    2238 058E  B8 00CB               1	Mov	ax,vector 
    2239 0591  E9 070A R             1	Jmp	common_int 
    2240 0594  60                    1	pusha 
    2241 0595  B8 00CC               1	Mov	ax,vector 
    2242 0598  E9 070A R             1	Jmp	common_int 
    2243 059B  60                    1	pusha 
    2244 059C  B8 00CD               1	Mov	ax,vector 
    2245 059F  E9 070A R             1	Jmp	common_int 
    2246 05A2  60                    1	pusha 
    2247 05A3  B8 00CE               1	Mov	ax,vector 
    2248 05A6  E9 070A R             1	Jmp	common_int 
    2249 05A9  60                    1	pusha 
    2250 05AA  B8 00CF               1	Mov	ax,vector 
    2251 05AD  E9 070A R             1	Jmp	common_int 
    2252 05B0  60                    1	pusha 
    2253 05B1  B8 00D0               1	Mov	ax,vector 
    2254 05B4  E9 070A R             1	Jmp	common_int 
    2255 05B7  60                    1	pusha 
    2256 05B8  B8 00D1               1	Mov	ax,vector 
    2257 05BB  E9 070A R             1	Jmp	common_int 
    2258 05BE  60                    1	pusha 
    2259 05BF  B8 00D2               1	Mov	ax,vector 
    2260 05C2  E9 070A R             1	Jmp	common_int 
    2261 05C5  60                    1	pusha 
    2262 05C6  B8 00D3               1	Mov	ax,vector 
    2263 05C9  E9 070A R             1	Jmp	common_int 
    2264 05CC  60                    1	pusha 
    2265 05CD  B8 00D4               1	Mov	ax,vector 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-63


    2266 05D0  E9 070A R             1	Jmp	common_int 
    2267 05D3  60                    1	pusha 
    2268 05D4  B8 00D5               1	Mov	ax,vector 
    2269 05D7  E9 070A R             1	Jmp	common_int 
    2270 05DA  60                    1	pusha 
    2271 05DB  B8 00D6               1	Mov	ax,vector 
    2272 05DE  E9 070A R             1	Jmp	common_int 
    2273 05E1  60                    1	pusha 
    2274 05E2  B8 00D7               1	Mov	ax,vector 
    2275 05E5  E9 070A R             1	Jmp	common_int 
    2276 05E8  60                    1	pusha 
    2277 05E9  B8 00D8               1	Mov	ax,vector 
    2278 05EC  E9 070A R             1	Jmp	common_int 
    2279 05EF  60                    1	pusha 
    2280 05F0  B8 00D9               1	Mov	ax,vector 
    2281 05F3  E9 070A R             1	Jmp	common_int 
    2282 05F6  60                    1	pusha 
    2283 05F7  B8 00DA               1	Mov	ax,vector 
    2284 05FA  E9 070A R             1	Jmp	common_int 
    2285 05FD  60                    1	pusha 
    2286 05FE  B8 00DB               1	Mov	ax,vector 
    2287 0601  E9 070A R             1	Jmp	common_int 
    2288 0604  60                    1	pusha 
    2289 0605  B8 00DC               1	Mov	ax,vector 
    2290 0608  E9 070A R             1	Jmp	common_int 
    2291 060B  60                    1	pusha 
    2292 060C  B8 00DD               1	Mov	ax,vector 
    2293 060F  E9 070A R             1	Jmp	common_int 
    2294 0612  60                    1	pusha 
    2295 0613  B8 00DE               1	Mov	ax,vector 
    2296 0616  E9 070A R             1	Jmp	common_int 
    2297 0619  60                    1	pusha 
    2298 061A  B8 00DF               1	Mov	ax,vector 
    2299 061D  E9 070A R             1	Jmp	common_int 
    2300 0620  60                    1	pusha 
    2301 0621  B8 00E0               1	Mov	ax,vector 
    2302 0624  E9 070A R             1	Jmp	common_int 
    2303 0627  60                    1	pusha 
    2304 0628  B8 00E1               1	Mov	ax,vector 
    2305 062B  E9 070A R             1	Jmp	common_int 
    2306 062E  60                    1	pusha 
    2307 062F  B8 00E2               1	Mov	ax,vector 
    2308 0632  E9 070A R             1	Jmp	common_int 
    2309 0635  60                    1	pusha 
    2310 0636  B8 00E3               1	Mov	ax,vector 
    2311 0639  E9 070A R             1	Jmp	common_int 
    2312 063C  60                    1	pusha 
    2313 063D  B8 00E4               1	Mov	ax,vector 
    2314 0640  E9 070A R             1	Jmp	common_int 
    2315 0643  60                    1	pusha 
    2316 0644  B8 00E5               1	Mov	ax,vector 
    2317 0647  E9 070A R             1	Jmp	common_int 
    2318 064A  60                    1	pusha 
    2319 064B  B8 00E6               1	Mov	ax,vector 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-64


    2320 064E  E9 070A R             1	Jmp	common_int 
    2321 0651  60                    1	pusha 
    2322 0652  B8 00E7               1	Mov	ax,vector 
    2323 0655  E9 070A R             1	Jmp	common_int 
    2324 0658  60                    1	pusha 
    2325 0659  B8 00E8               1	Mov	ax,vector 
    2326 065C  E9 070A R             1	Jmp	common_int 
    2327 065F  60                    1	pusha 
    2328 0660  B8 00E9               1	Mov	ax,vector 
    2329 0663  E9 070A R             1	Jmp	common_int 
    2330 0666  60                    1	pusha 
    2331 0667  B8 00EA               1	Mov	ax,vector 
    2332 066A  E9 070A R             1	Jmp	common_int 
    2333 066D  60                    1	pusha 
    2334 066E  B8 00EB               1	Mov	ax,vector 
    2335 0671  E9 070A R             1	Jmp	common_int 
    2336 0674  60                    1	pusha 
    2337 0675  B8 00EC               1	Mov	ax,vector 
    2338 0678  E9 070A R             1	Jmp	common_int 
    2339 067B  60                    1	pusha 
    2340 067C  B8 00ED               1	Mov	ax,vector 
    2341 067F  E9 070A R             1	Jmp	common_int 
    2342 0682  60                    1	pusha 
    2343 0683  B8 00EE               1	Mov	ax,vector 
    2344 0686  E9 070A R             1	Jmp	common_int 
    2345 0689  60                    1	pusha 
    2346 068A  B8 00EF               1	Mov	ax,vector 
    2347 068D  EB 7B 90              1	Jmp	common_int 
    2348 0690  60                    1	pusha 
    2349 0691  B8 00F0               1	Mov	ax,vector 
    2350 0694  EB 74 90              1	Jmp	common_int 
    2351 0697  60                    1	pusha 
    2352 0698  B8 00F1               1	Mov	ax,vector 
    2353 069B  EB 6D 90              1	Jmp	common_int 
    2354 069E  60                    1	pusha 
    2355 069F  B8 00F2               1	Mov	ax,vector 
    2356 06A2  EB 66 90              1	Jmp	common_int 
    2357 06A5  60                    1	pusha 
    2358 06A6  B8 00F3               1	Mov	ax,vector 
    2359 06A9  EB 5F 90              1	Jmp	common_int 
    2360 06AC  60                    1	pusha 
    2361 06AD  B8 00F4               1	Mov	ax,vector 
    2362 06B0  EB 58 90              1	Jmp	common_int 
    2363 06B3  60                    1	pusha 
    2364 06B4  B8 00F5               1	Mov	ax,vector 
    2365 06B7  EB 51 90              1	Jmp	common_int 
    2366 06BA  60                    1	pusha 
    2367 06BB  B8 00F6               1	Mov	ax,vector 
    2368 06BE  EB 4A 90              1	Jmp	common_int 
    2369 06C1  60                    1	pusha 
    2370 06C2  B8 00F7               1	Mov	ax,vector 
    2371 06C5  EB 43 90              1	Jmp	common_int 
    2372 06C8  60                    1	pusha 
    2373 06C9  B8 00F8               1	Mov	ax,vector 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-65


    2374 06CC  EB 3C 90              1	Jmp	common_int 
    2375 06CF  60                    1	pusha 
    2376 06D0  B8 00F9               1	Mov	ax,vector 
    2377 06D3  EB 35 90              1	Jmp	common_int 
    2378 06D6  60                    1	pusha 
    2379 06D7  B8 00FA               1	Mov	ax,vector 
    2380 06DA  EB 2E 90              1	Jmp	common_int 
    2381 06DD  60                    1	pusha 
    2382 06DE  B8 00FB               1	Mov	ax,vector 
    2383 06E1  EB 27 90              1	Jmp	common_int 
    2384 06E4  60                    1	pusha 
    2385 06E5  B8 00FC               1	Mov	ax,vector 
    2386 06E8  EB 20 90              1	Jmp	common_int 
    2387 06EB  60                    1	pusha 
    2388 06EC  B8 00FD               1	Mov	ax,vector 
    2389 06EF  EB 19 90              1	Jmp	common_int 
    2390 06F2  60                    1	pusha 
    2391 06F3  B8 00FE               1	Mov	ax,vector 
    2392 06F6  EB 12 90              1	Jmp	common_int 
    2393 06F9  60                    1	pusha 
    2394 06FA  B8 00FF               1	Mov	ax,vector 
    2395 06FD  EB 0B 90              1	Jmp	common_int 
    2396 0700  49 4E 54 45 52 55 50	Mes_int	Db		'INTERUPT N' 
    2397       54 20 4E			
    2398 070A				common_int: 
    2399				; формування номера переривання в Mes_i
					nt 
    2400 070A  B1 0A			mov	cl,10 
    2401 070C  F6 F1			div cl; молодша цифра в ah 
    2402 070E  80 CC 30			or ah,30h ;формування текстового коду ц
					ифри 
    2403 0711  8A FC			mov bh,ah 
    2404 0713  32 E4			xor	ah,ah 
    2405 0715  F6 F1			div	cl; середня цифра в ah, старша 
					- в al 
    2406 0717  0D 3030			or ax,3030h ;формування текстового коду
					 цифр 
    2407 071A  8B D0			mov dx,ax 
    2408				; виведення повідомлення на екран 
    2409 071C  68 0018 R		push offset descr_es; селектор дескрипт
					ора із 1-го етапу 
    2410 071F  07			pop	es 
    2411 0720  BE 0700 R		mov si,offset Mes_int 
    2412 0723  B9 000A			mov cx,10 
    2413 0726  BF 0A3C			mov di,2620 ;початкова адреса для вивед
					ення  
    2414 0729  B4 07			mov ah,07h ;атрибут символів 
    2415 072B				outstr: 
    2416 072B  2E: 8A 04		mov al,CS:[si] 
    2417 072E  AB			stosw 
    2418 072F  46			inc si 
    2419 0730  E2 F9			loop outstr 
    2420 0732  B0 20			mov	al,' ' 
    2421 0734  AB			stosw 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-66


    2422 0735  8A C2			mov	al,dl ;старша десяткова цифра н
					омера вектора  
    2423 0737  AB			stosw 
    2424 0738  8A C6			mov	al,dh ;середня десяткова цифра 
					номера вектора 
    2425 073A  AB			stosw 
    2426 073B  8A C7			mov	al,bh ;молодша десяткова цифра 
					номера вектора 
    2427 073D  AB			stosw 
    2428				; після виведення повідомлення організу
					ємо передачу управління 
    2429				; в основний сегмент для переключення в
					 режим реальних адрес 
    2430				; Для цього використаємо команду IRET 
    2431				; В даній точці програми в стек записан
					о вміст всіх регістрів, адреса  
    2432				;команди, яка визвала виключення, та вм
					іст регістра ознак.  
    2433				; Ми все це проігноруємо і запишемо в с
					тек нові дані 
    2434 073E  9C			pushf 
    2435 073F  68 0028 R		push offset descr_cs; селектор дескрипт
					ора сегмента кодів із 1-го етапу 
    2436 0742  68 0137 R		push offset return_dos 
    2437 0745  CF			iret; передача управління по адресі ret
					urn_dos основного сегмента кодів 
    2438 0746				common_end: 
    2439 = 0746				Int_code_size =common_end-I_beg 
    2440 0746  EB 08 90			jmp exit 
    2441 0749				MOD_error: 
    2442 0749  B4 09			mov ah,9 
    2443 074B  BA 0014 R		mov dx,offset mes1 
    2444 074E  CD 21			int 21h 
    2445				;------------------ 
    2446 0750				exit: 
    2447 0750  B4 01			mov ah,1 
    2448 0752  CD 21			int 21h 
    2449 0754  B4 4C			mov ah, 4ch		  
    2450 0756  CD 21			int 21h		 
    2451 0758  B8 ---- R		mov ax,_data 
    2452 075B  8E D8			mov ds,ax 
    2453				; формування  IDT 
    2454 075D  66| 33 C0		xor eax,eax 
    2455 0760  B8 ---- R		mov ax,IDT 
    2456 0763  66| C1 E0 04		shl eax,4 
    2457 0767  66| A3 0008 R		mov pidt.adr,eax 
    2458 076B  66| C7 06 0004 R 0000	mov pidt.lim,8*256 
    2459       0800			
    2460				; завантаження  IDT 
    2461 0774  0F 01 1E 0004 R		lidt pidt 
    2462 0779  66| 33 C0		xor eax,eax 
    2463 077C  66| A3 0008 R		mov pidt.adr,eax 
    2464 0780  66| C7 06 0004 R 0000	mov pidt.lim,3ffh 
    2465       03FF			
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Page     1-67


    2466 0789  0F 01 1E 0004 R		lidt pidt 
    2467 078E				Int_code ends 
    2468				;--------------------------------------
					------------------ 
    2469				 
    2470 0188				End Start 
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Symbols-1


Structures and Records:

                N a m e                 Width   # fields
                                        Shift   Width   Mask    Initial

DESCR  . . . . . . . . . . . . .  	0008	0006
  LIMIT_1  . . . . . . . . . . .  	0000
  BASE_1 . . . . . . . . . . . .  	0002
  BASE_2 . . . . . . . . . . . .  	0004
  ATTRIB . . . . . . . . . . . .  	0005
  BT6  . . . . . . . . . . . . .  	0006
  BASE_3 . . . . . . . . . . . .  	0007
DESCRTEST  . . . . . . . . . . .  	0008	0006
  TLIMIT_1 . . . . . . . . . . .  	0000
  TBASE_1  . . . . . . . . . . .  	0002
  TBASE_2  . . . . . . . . . . .  	0004
  TATTRIB  . . . . . . . . . . .  	0005
  TBT6 . . . . . . . . . . . . .  	0006
  TBASE_3  . . . . . . . . . . .  	0007
POINT_DT . . . . . . . . . . . .  	0008	0002
  LIM  . . . . . . . . . . . . .  	0000
  ADR  . . . . . . . . . . . . .  	0004



                N a m e         	Size	Length	 Align	Combine Class

DGROUP . . . . . . . . . . . . .  	GROUP
  _DATA  . . . . . . . . . . . .  	16 Bit	002F	WORD	PUBLIC	'DATA'
  STACK  . . . . . . . . . . . .  	16 Bit	0100	PARA	STACK	'STACK'
GDT  . . . . . . . . . . . . . .  	16 Bit	0038	PARA	PUBLIC	'DATA'
IDT  . . . . . . . . . . . . . .  	16 Bit	0800	PARA	PUBLIC	'DATA'
INT_CODE . . . . . . . . . . . .  	16 Bit	078E	PARA	PUBLIC	'CODE'
ST_P . . . . . . . . . . . . . .  	16 Bit	03EA	PARA	NONE	
TEST1  . . . . . . . . . . . . .  	16 Bit	0038	PARA	PUBLIC	'DATA'
_TEXT  . . . . . . . . . . . . .  	16 Bit	0188	WORD	PUBLIC	'CODE'

Symbols:            

                N a m e         	Type	 Value	 Attr

CODE_SEG . . . . . . . . . . . .  	NUMBER	009A	
COMMON_END . . . . . . . . . . .  	L NEAR	0746	INT_CODE
COMMON_INT . . . . . . . . . . .  	L NEAR	070A	INT_CODE

DATA_SEG . . . . . . . . . . . .  	NUMBER	0092	
DESCR_CS . . . . . . . . . . . .  	L QWORD	0028	GDT
DESCR_DS . . . . . . . . . . . .  	L QWORD	0010	GDT
DESCR_ES . . . . . . . . . . . .  	L QWORD	0018	GDT
DESCR_GDT  . . . . . . . . . . .  	L QWORD	0008	GDT
DESCR_SS . . . . . . . . . . . .  	L QWORD	0020	GDT
DESKR_INT_CODE . . . . . . . . .  	L QWORD	0030	GDT

ESPROT . . . . . . . . . . . . .  	L NEAR	0128	_TEXT
Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Symbols-2


EXIT . . . . . . . . . . . . . .  	L NEAR	0750	INT_CODE

GDT_SIZE . . . . . . . . . . . .  	NUMBER	002F	

INT_CODE_SIZE  . . . . . . . . .  	NUMBER	0746	
I_BEG  . . . . . . . . . . . . .  	L NEAR	0000	INT_CODE
I_END  . . . . . . . . . . . . .  	L NEAR	0007	INT_CODE

JUMPT  . . . . . . . . . . . . .  	L NEAR	0162	_TEXT

MES1 . . . . . . . . . . . . . .  	L BYTE	0014	_DATA
MESS_PROTECT_MODE  . . . . . . .  	L BYTE	001F	_DATA
MES_INT  . . . . . . . . . . . .  	L BYTE	0700	INT_CODE
MOD_ERROR  . . . . . . . . . . .  	L NEAR	0749	INT_CODE

OUTMES . . . . . . . . . . . . .  	L NEAR	00D9	_TEXT
OUTSTR . . . . . . . . . . . . .  	L NEAR	072B	INT_CODE

PGDT . . . . . . . . . . . . . .  	L QWORD	000C	_DATA
PIDT . . . . . . . . . . . . . .  	L QWORD	0004	_DATA
PROC_INT_SIZE  . . . . . . . . .  	NUMBER	0007	
PROTECT  . . . . . . . . . . . .  	L NEAR	00BB	_TEXT

RETURN_DOS . . . . . . . . . . .  	L NEAR	0137	_TEXT
R_MODE . . . . . . . . . . . . .  	L NEAR	016F	_TEXT

SELECTOR0  . . . . . . . . . . .  	L QWORD	0000	GDT
STACK_SEG  . . . . . . . . . . .  	NUMBER	0096	
START  . . . . . . . . . . . . .  	L NEAR	0000	_TEXT

TDATA_SEG  . . . . . . . . . . .  	NUMBER	0092	
TDESCR_CS  . . . . . . . . . . .  	L QWORD	0028	TEST1
TDESCR_DS  . . . . . . . . . . .  	L QWORD	0010	TEST1
TDESCR_ES  . . . . . . . . . . .  	L QWORD	0018	TEST1
TDESCR_GDT . . . . . . . . . . .  	L QWORD	0008	TEST1
TDESCR_SS  . . . . . . . . . . .  	L QWORD	0020	TEST1
TDESKR_INT_CODE  . . . . . . . .  	L QWORD	0030	TEST1
TEMPVAR  . . . . . . . . . . . .  	L WORD	002D	_DATA
TGDT_SIZE  . . . . . . . . . . .  	NUMBER	002F	
TOP_REAL_MODE  . . . . . . . . .  	L DWORD	0000	_DATA
TOP_STP  . . . . . . . . . . . .  	L WORD	03E8	ST_P
TSELECTOR0 . . . . . . . . . . .  	L QWORD	0000	TEST1

VECTOR . . . . . . . . . . . . .  	NUMBER	0100	

@CODE  . . . . . . . . . . . . .  	TEXT  _TEXT		
@CODESIZE  . . . . . . . . . . .  	TEXT  0		
@DATASIZE  . . . . . . . . . . .  	TEXT  0		
@FILENAME  . . . . . . . . . . .  	TEXT  1		

Microsoft (R) Macro Assembler Version 5.00                  2/3/16 15:39:36
                                                             Symbols-3



    328 Source  Lines
   2884 Total   Lines
     81 Symbols

  48632 + 412968 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
