.386p
.model flat
; ОПИС ДЕСКРИПТОРА СЕГМЕНТА
descr struc
limit_1 dw 0 ; молодші 2 байта розміру сегменту (розряди 0-15)
base_1 dw 0 ; молодші 2 байта фізичної 32-розрядної адреси сегменту 
base_2 db 0 ; 3-тій ба	йт фізичної 32-розрядної адреси сегменту
attrib db 0 ; байт атрибутів сегменту
bt6 db 0 ; старші 4 розряди байту – атрибути сегменту,
; молодші 4 розряди байту - розряди 16-19 розміру сегменту
base_3 db 0 ; 4-тий байт фізичної 32-розрядної адреси сегменту
descr           ends
Data Segment			
Top_real_mode dd ?
MOD_error dw ?
;db        0eah                  ;машинний код команди jmp
;dw        offset protect        ;зміщення мітки переходу в сегменті кодів
;dw        offset deskr_ьщвудcs         ;селектор сегмента кодів 
;dw        offset deskr_ss         ;селектор сегмента кодів 
;dw        offset deskr_es         ;селектор сегмента кодів 
; БАЙТИ АТРИБУТІВ
code_seg	equ	10011010b; не підпорядкований сегмент кодів, дозволено читати 
data_seg	equ	10010010b; сегмент даних, дозволено записувати
stack_seg	equ	10010110b; сегмент стека
Data Ends			
Code Segment	
Assume cs:Code, ds:Data	
Start: 
;mov ax,Code
;mov cs,ax
mov ax,Data
mov ds,ax
;Перевірка виконується шляхом аналізу стану біта 0 регістра управління cr0.
mov	eax,cr0
test	al,1
;jnz	MOD_error ; процесор уже в захищеному режимі
;Крім того, необхідно розблокувати 20-й розряд адрес ПЕОМ
in	al,92h
or	al,2
out	92h,al
end start
Code Ends

;protect:
;завантажити селектори для інших дескрипторів
; припускаємо, що RPL=0


